Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmts stmt
    3      | stmt

    4 stmt: func_stmt
    5     | var_decl_stmt

    6 func_stmt: TYPE ID PARENT_LEFT param_list PARENT_RIGHT comp_block_stmt

    7 var_decl_stmt: TYPE ID SEMICOLON

    8 param_list: param_list COMMA TYPE ID
    9           | TYPE ID
   10           | %empty

   11 simple_param_list: simple_param_list COMMA ID
   12                  | ID
   13                  | %empty

   14 flex_comp_block_stmt: comp_block_stmt
   15                     | block_stmt

   16 comp_block_stmt: BRACK_LEFT block_stmts BRACK_RIGHT

   17 block_stmts: block_stmts block_stmt
   18            | %empty

   19 block_stmt: READ PARENT_LEFT ID PARENT_RIGHT SEMICOLON
   20           | WRITE PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON
   21           | WRITELN PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON
   22           | var_decl_stmt
   23           | ID ASSIGN simple_expr SEMICOLON
   24           | func_call SEMICOLON
   25           | RETURN simple_expr SEMICOLON
   26           | FORALL PARENT_LEFT set_expr PARENT_RIGHT flex_comp_block_stmt
   27           | set_func_call SEMICOLON

   28 set_expr: simple_expr IN simple_expr

   29 func_call: ID PARENT_LEFT simple_param_list PARENT_RIGHT

   30 set_func_call: IS_SET PARENT_LEFT ID PARENT_RIGHT
   31              | ADD_SET PARENT_LEFT set_expr PARENT_RIGHT
   32              | REMOVE PARENT_LEFT set_expr PARENT_RIGHT
   33              | EXISTS PARENT_LEFT set_expr PARENT_RIGHT

   34 simple_expr: arith_expr
   35            | func_cte_expr

   36 func_cte_expr: EMPTY
   37              | STRING
   38              | CHAR
   39              | func_call
   40              | set_func_call
   41              | PARENT_LEFT func_cte_expr PARENT_RIGHT

   42 arith_expr: arith_expr ADD term
   43           | arith_expr SUB term
   44           | term

   45 term: term MULT factor
   46     | term DIV factor
   47     | factor

   48 factor: INTEGER
   49       | FLOAT
   50       | ID
   51       | PARENT_LEFT arith_expr PARENT_RIGHT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BRACK_LEFT <op> (258) 16
    BRACK_RIGHT <op> (259) 16
    PARENT_LEFT <op> (260) 6 19 20 21 26 29 30 31 32 33 41 51
    PARENT_RIGHT <op> (261) 6 19 20 21 26 29 30 31 32 33 41 51
    SEMICOLON <op> (262) 7 19 20 21 23 24 25 27
    ADD <op> (263) 42
    SUB <op> (264) 43
    MULT <op> (265) 45
    DIV <op> (266) 46
    CHAR <op> (267) 38
    COMMA <op> (268) 8 11
    ASSIGN <op> (269) 23
    READ <str_value> (270) 19
    WRITE <str_value> (271) 20
    WRITELN <str_value> (272) 21
    TYPE <str_value> (273) 6 7 8 9
    ID <str_value> (274) 6 7 8 9 11 12 19 23 29 30 50
    EMPTY <str_value> (275) 36
    STRING <str_value> (276) 37
    RETURN <str_value> (277) 25
    FORALL <str_value> (278) 26
    IN <str_value> (279) 28
    IS_SET <str_value> (280) 30
    ADD_SET <str_value> (281) 31
    REMOVE <str_value> (282) 32
    EXISTS <str_value> (283) 33
    INTEGER <int_value> (284) 48
    FLOAT <float_value> (285) 49


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 1
        on right: 0
    stmts (33)
        on left: 2 3
        on right: 1 2
    stmt (34)
        on left: 4 5
        on right: 2 3
    func_stmt (35)
        on left: 6
        on right: 4
    var_decl_stmt (36)
        on left: 7
        on right: 5 22
    param_list (37)
        on left: 8 9 10
        on right: 6 8
    simple_param_list (38)
        on left: 11 12 13
        on right: 11 29
    flex_comp_block_stmt (39)
        on left: 14 15
        on right: 26
    comp_block_stmt (40)
        on left: 16
        on right: 6 14
    block_stmts (41)
        on left: 17 18
        on right: 16 17
    block_stmt (42)
        on left: 19 20 21 22 23 24 25 26 27
        on right: 15 17
    set_expr (43)
        on left: 28
        on right: 26 31 32 33
    func_call (44)
        on left: 29
        on right: 24 39
    set_func_call (45)
        on left: 30 31 32 33
        on right: 27 40
    simple_expr (46)
        on left: 34 35
        on right: 20 21 23 25 28
    func_cte_expr (47)
        on left: 36 37 38 39 40 41
        on right: 35 41
    arith_expr (48)
        on left: 42 43 44
        on right: 34 42 43 51
    term (49)
        on left: 45 46 47
        on right: 42 43 44 45 46
    factor (50)
        on left: 48 49 50 51
        on right: 45 46 47


State 0

    0 $accept: . program $end

    TYPE  shift, and go to state 1

    program        go to state 2
    stmts          go to state 3
    stmt           go to state 4
    func_stmt      go to state 5
    var_decl_stmt  go to state 6


State 1

    6 func_stmt: TYPE . ID PARENT_LEFT param_list PARENT_RIGHT comp_block_stmt
    7 var_decl_stmt: TYPE . ID SEMICOLON

    ID  shift, and go to state 7


State 2

    0 $accept: program . $end

    $end  shift, and go to state 8


State 3

    1 program: stmts .
    2 stmts: stmts . stmt

    TYPE  shift, and go to state 1

    $end  reduce using rule 1 (program)

    stmt           go to state 9
    func_stmt      go to state 5
    var_decl_stmt  go to state 6


State 4

    3 stmts: stmt .

    $end  reduce using rule 3 (stmts)
    TYPE  reduce using rule 3 (stmts)


State 5

    4 stmt: func_stmt .

    $end  reduce using rule 4 (stmt)
    TYPE  reduce using rule 4 (stmt)


State 6

    5 stmt: var_decl_stmt .

    $end  reduce using rule 5 (stmt)
    TYPE  reduce using rule 5 (stmt)


State 7

    6 func_stmt: TYPE ID . PARENT_LEFT param_list PARENT_RIGHT comp_block_stmt
    7 var_decl_stmt: TYPE ID . SEMICOLON

    PARENT_LEFT  shift, and go to state 10
    SEMICOLON    shift, and go to state 11


State 8

    0 $accept: program $end .

    $default  accept


State 9

    2 stmts: stmts stmt .

    $end  reduce using rule 2 (stmts)
    TYPE  reduce using rule 2 (stmts)


State 10

    6 func_stmt: TYPE ID PARENT_LEFT . param_list PARENT_RIGHT comp_block_stmt

    TYPE  shift, and go to state 12

    PARENT_RIGHT  reduce using rule 10 (param_list)
    COMMA         reduce using rule 10 (param_list)

    param_list  go to state 13


State 11

    7 var_decl_stmt: TYPE ID SEMICOLON .

    $end  reduce using rule 7 (var_decl_stmt)
    TYPE  reduce using rule 7 (var_decl_stmt)


State 12

    9 param_list: TYPE . ID

    ID  shift, and go to state 14


State 13

    6 func_stmt: TYPE ID PARENT_LEFT param_list . PARENT_RIGHT comp_block_stmt
    8 param_list: param_list . COMMA TYPE ID

    PARENT_RIGHT  shift, and go to state 15
    COMMA         shift, and go to state 16


State 14

    9 param_list: TYPE ID .

    PARENT_RIGHT  reduce using rule 9 (param_list)
    COMMA         reduce using rule 9 (param_list)


State 15

    6 func_stmt: TYPE ID PARENT_LEFT param_list PARENT_RIGHT . comp_block_stmt

    BRACK_LEFT  shift, and go to state 17

    comp_block_stmt  go to state 18


State 16

    8 param_list: param_list COMMA . TYPE ID

    TYPE  shift, and go to state 19


State 17

   16 comp_block_stmt: BRACK_LEFT . block_stmts BRACK_RIGHT

    BRACK_RIGHT  reduce using rule 18 (block_stmts)
    READ         reduce using rule 18 (block_stmts)
    WRITE        reduce using rule 18 (block_stmts)
    WRITELN      reduce using rule 18 (block_stmts)
    TYPE         reduce using rule 18 (block_stmts)
    ID           reduce using rule 18 (block_stmts)
    RETURN       reduce using rule 18 (block_stmts)
    FORALL       reduce using rule 18 (block_stmts)
    IS_SET       reduce using rule 18 (block_stmts)
    ADD_SET      reduce using rule 18 (block_stmts)
    REMOVE       reduce using rule 18 (block_stmts)
    EXISTS       reduce using rule 18 (block_stmts)

    block_stmts  go to state 20


State 18

    6 func_stmt: TYPE ID PARENT_LEFT param_list PARENT_RIGHT comp_block_stmt .

    $end  reduce using rule 6 (func_stmt)
    TYPE  reduce using rule 6 (func_stmt)


State 19

    8 param_list: param_list COMMA TYPE . ID

    ID  shift, and go to state 21


State 20

   16 comp_block_stmt: BRACK_LEFT block_stmts . BRACK_RIGHT
   17 block_stmts: block_stmts . block_stmt

    BRACK_RIGHT  shift, and go to state 22
    READ         shift, and go to state 23
    WRITE        shift, and go to state 24
    WRITELN      shift, and go to state 25
    TYPE         shift, and go to state 26
    ID           shift, and go to state 27
    RETURN       shift, and go to state 28
    FORALL       shift, and go to state 29
    IS_SET       shift, and go to state 30
    ADD_SET      shift, and go to state 31
    REMOVE       shift, and go to state 32
    EXISTS       shift, and go to state 33

    var_decl_stmt  go to state 34
    block_stmt     go to state 35
    func_call      go to state 36
    set_func_call  go to state 37


State 21

    8 param_list: param_list COMMA TYPE ID .

    PARENT_RIGHT  reduce using rule 8 (param_list)
    COMMA         reduce using rule 8 (param_list)


State 22

   16 comp_block_stmt: BRACK_LEFT block_stmts BRACK_RIGHT .

    $end  reduce using rule 16 (comp_block_stmt)
    TYPE  reduce using rule 16 (comp_block_stmt)


State 23

   19 block_stmt: READ . PARENT_LEFT ID PARENT_RIGHT SEMICOLON

    PARENT_LEFT  shift, and go to state 38


State 24

   20 block_stmt: WRITE . PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON

    PARENT_LEFT  shift, and go to state 39


State 25

   21 block_stmt: WRITELN . PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON

    PARENT_LEFT  shift, and go to state 40


State 26

    7 var_decl_stmt: TYPE . ID SEMICOLON

    ID  shift, and go to state 41


State 27

   23 block_stmt: ID . ASSIGN simple_expr SEMICOLON
   29 func_call: ID . PARENT_LEFT simple_param_list PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 42
    ASSIGN       shift, and go to state 43


State 28

   25 block_stmt: RETURN . simple_expr SEMICOLON

    PARENT_LEFT  shift, and go to state 44
    CHAR         shift, and go to state 45
    ID           shift, and go to state 46
    EMPTY        shift, and go to state 47
    STRING       shift, and go to state 48
    IS_SET       shift, and go to state 30
    ADD_SET      shift, and go to state 31
    REMOVE       shift, and go to state 32
    EXISTS       shift, and go to state 33
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50

    func_call      go to state 51
    set_func_call  go to state 52
    simple_expr    go to state 53
    func_cte_expr  go to state 54
    arith_expr     go to state 55
    term           go to state 56
    factor         go to state 57


State 29

   26 block_stmt: FORALL . PARENT_LEFT set_expr PARENT_RIGHT flex_comp_block_stmt

    PARENT_LEFT  shift, and go to state 58


State 30

   30 set_func_call: IS_SET . PARENT_LEFT ID PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 59


State 31

   31 set_func_call: ADD_SET . PARENT_LEFT set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 60


State 32

   32 set_func_call: REMOVE . PARENT_LEFT set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 61


State 33

   33 set_func_call: EXISTS . PARENT_LEFT set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 62


State 34

   22 block_stmt: var_decl_stmt .

    BRACK_RIGHT  reduce using rule 22 (block_stmt)
    READ         reduce using rule 22 (block_stmt)
    WRITE        reduce using rule 22 (block_stmt)
    WRITELN      reduce using rule 22 (block_stmt)
    TYPE         reduce using rule 22 (block_stmt)
    ID           reduce using rule 22 (block_stmt)
    RETURN       reduce using rule 22 (block_stmt)
    FORALL       reduce using rule 22 (block_stmt)
    IS_SET       reduce using rule 22 (block_stmt)
    ADD_SET      reduce using rule 22 (block_stmt)
    REMOVE       reduce using rule 22 (block_stmt)
    EXISTS       reduce using rule 22 (block_stmt)


State 35

   17 block_stmts: block_stmts block_stmt .

    BRACK_RIGHT  reduce using rule 17 (block_stmts)
    READ         reduce using rule 17 (block_stmts)
    WRITE        reduce using rule 17 (block_stmts)
    WRITELN      reduce using rule 17 (block_stmts)
    TYPE         reduce using rule 17 (block_stmts)
    ID           reduce using rule 17 (block_stmts)
    RETURN       reduce using rule 17 (block_stmts)
    FORALL       reduce using rule 17 (block_stmts)
    IS_SET       reduce using rule 17 (block_stmts)
    ADD_SET      reduce using rule 17 (block_stmts)
    REMOVE       reduce using rule 17 (block_stmts)
    EXISTS       reduce using rule 17 (block_stmts)


State 36

   24 block_stmt: func_call . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 37

   27 block_stmt: set_func_call . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 38

   19 block_stmt: READ PARENT_LEFT . ID PARENT_RIGHT SEMICOLON

    ID  shift, and go to state 65


State 39

   20 block_stmt: WRITE PARENT_LEFT . simple_expr PARENT_RIGHT SEMICOLON

    PARENT_LEFT  shift, and go to state 112
    CHAR         shift, and go to state 113
    ID           shift, and go to state 114
    EMPTY        shift, and go to state 115
    STRING       shift, and go to state 116
    IS_SET       shift, and go to state 117
    ADD_SET      shift, and go to state 118
    REMOVE       shift, and go to state 119
    EXISTS       shift, and go to state 120
    INTEGER      shift, and go to state 121
    FLOAT        shift, and go to state 122

    func_call      go to state 123
    set_func_call  go to state 124
    simple_expr    go to state 66
    func_cte_expr  go to state 125
    arith_expr     go to state 126
    term           go to state 127
    factor         go to state 128


State 40

   21 block_stmt: WRITELN PARENT_LEFT . simple_expr PARENT_RIGHT SEMICOLON

    PARENT_LEFT  shift, and go to state 112
    CHAR         shift, and go to state 113
    ID           shift, and go to state 114
    EMPTY        shift, and go to state 115
    STRING       shift, and go to state 116
    IS_SET       shift, and go to state 117
    ADD_SET      shift, and go to state 118
    REMOVE       shift, and go to state 119
    EXISTS       shift, and go to state 120
    INTEGER      shift, and go to state 121
    FLOAT        shift, and go to state 122

    func_call      go to state 123
    set_func_call  go to state 124
    simple_expr    go to state 67
    func_cte_expr  go to state 125
    arith_expr     go to state 126
    term           go to state 127
    factor         go to state 128


State 41

    7 var_decl_stmt: TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 129


State 42

   29 func_call: ID PARENT_LEFT . simple_param_list PARENT_RIGHT

    ID  shift, and go to state 68

    PARENT_RIGHT  reduce using rule 13 (simple_param_list)
    COMMA         reduce using rule 13 (simple_param_list)

    simple_param_list  go to state 69


State 43

   23 block_stmt: ID ASSIGN . simple_expr SEMICOLON

    PARENT_LEFT  shift, and go to state 44
    CHAR         shift, and go to state 45
    ID           shift, and go to state 46
    EMPTY        shift, and go to state 47
    STRING       shift, and go to state 48
    IS_SET       shift, and go to state 30
    ADD_SET      shift, and go to state 31
    REMOVE       shift, and go to state 32
    EXISTS       shift, and go to state 33
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50

    func_call      go to state 51
    set_func_call  go to state 52
    simple_expr    go to state 70
    func_cte_expr  go to state 54
    arith_expr     go to state 55
    term           go to state 56
    factor         go to state 57


State 44

   41 func_cte_expr: PARENT_LEFT . func_cte_expr PARENT_RIGHT
   51 factor: PARENT_LEFT . arith_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 112
    CHAR         shift, and go to state 113
    ID           shift, and go to state 114
    EMPTY        shift, and go to state 115
    STRING       shift, and go to state 116
    IS_SET       shift, and go to state 117
    ADD_SET      shift, and go to state 118
    REMOVE       shift, and go to state 119
    EXISTS       shift, and go to state 120
    INTEGER      shift, and go to state 121
    FLOAT        shift, and go to state 122

    func_call      go to state 123
    set_func_call  go to state 124
    func_cte_expr  go to state 71
    arith_expr     go to state 72
    term           go to state 127
    factor         go to state 128


State 45

   38 func_cte_expr: CHAR .

    SEMICOLON  reduce using rule 38 (func_cte_expr)


State 46

   29 func_call: ID . PARENT_LEFT simple_param_list PARENT_RIGHT
   50 factor: ID .

    PARENT_LEFT  shift, and go to state 42

    SEMICOLON  reduce using rule 50 (factor)
    ADD        reduce using rule 50 (factor)
    SUB        reduce using rule 50 (factor)
    MULT       reduce using rule 50 (factor)
    DIV        reduce using rule 50 (factor)


State 47

   36 func_cte_expr: EMPTY .

    SEMICOLON  reduce using rule 36 (func_cte_expr)


State 48

   37 func_cte_expr: STRING .

    SEMICOLON  reduce using rule 37 (func_cte_expr)


State 49

   48 factor: INTEGER .

    SEMICOLON  reduce using rule 48 (factor)
    ADD        reduce using rule 48 (factor)
    SUB        reduce using rule 48 (factor)
    MULT       reduce using rule 48 (factor)
    DIV        reduce using rule 48 (factor)


State 50

   49 factor: FLOAT .

    SEMICOLON  reduce using rule 49 (factor)
    ADD        reduce using rule 49 (factor)
    SUB        reduce using rule 49 (factor)
    MULT       reduce using rule 49 (factor)
    DIV        reduce using rule 49 (factor)


State 51

   39 func_cte_expr: func_call .

    SEMICOLON  reduce using rule 39 (func_cte_expr)


State 52

   40 func_cte_expr: set_func_call .

    SEMICOLON  reduce using rule 40 (func_cte_expr)


State 53

   25 block_stmt: RETURN simple_expr . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 54

   35 simple_expr: func_cte_expr .

    SEMICOLON  reduce using rule 35 (simple_expr)


State 55

   34 simple_expr: arith_expr .
   42 arith_expr: arith_expr . ADD term
   43           | arith_expr . SUB term

    ADD  shift, and go to state 74
    SUB  shift, and go to state 75

    SEMICOLON  reduce using rule 34 (simple_expr)


State 56

   44 arith_expr: term .
   45 term: term . MULT factor
   46     | term . DIV factor

    MULT  shift, and go to state 76
    DIV   shift, and go to state 77

    SEMICOLON  reduce using rule 44 (arith_expr)
    ADD        reduce using rule 44 (arith_expr)
    SUB        reduce using rule 44 (arith_expr)


State 57

   47 term: factor .

    SEMICOLON  reduce using rule 47 (term)
    ADD        reduce using rule 47 (term)
    SUB        reduce using rule 47 (term)
    MULT       reduce using rule 47 (term)
    DIV        reduce using rule 47 (term)


State 58

   26 block_stmt: FORALL PARENT_LEFT . set_expr PARENT_RIGHT flex_comp_block_stmt

    PARENT_LEFT  shift, and go to state 130
    CHAR         shift, and go to state 131
    ID           shift, and go to state 132
    EMPTY        shift, and go to state 133
    STRING       shift, and go to state 134
    IS_SET       shift, and go to state 135
    ADD_SET      shift, and go to state 136
    REMOVE       shift, and go to state 137
    EXISTS       shift, and go to state 138
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    set_expr       go to state 78
    func_call      go to state 141
    set_func_call  go to state 142
    simple_expr    go to state 79
    func_cte_expr  go to state 143
    arith_expr     go to state 144
    term           go to state 145
    factor         go to state 146


State 59

   30 set_func_call: IS_SET PARENT_LEFT . ID PARENT_RIGHT

    ID  shift, and go to state 80


State 60

   31 set_func_call: ADD_SET PARENT_LEFT . set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 130
    CHAR         shift, and go to state 131
    ID           shift, and go to state 132
    EMPTY        shift, and go to state 133
    STRING       shift, and go to state 134
    IS_SET       shift, and go to state 135
    ADD_SET      shift, and go to state 136
    REMOVE       shift, and go to state 137
    EXISTS       shift, and go to state 138
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    set_expr       go to state 81
    func_call      go to state 141
    set_func_call  go to state 142
    simple_expr    go to state 79
    func_cte_expr  go to state 143
    arith_expr     go to state 144
    term           go to state 145
    factor         go to state 146


State 61

   32 set_func_call: REMOVE PARENT_LEFT . set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 130
    CHAR         shift, and go to state 131
    ID           shift, and go to state 132
    EMPTY        shift, and go to state 133
    STRING       shift, and go to state 134
    IS_SET       shift, and go to state 135
    ADD_SET      shift, and go to state 136
    REMOVE       shift, and go to state 137
    EXISTS       shift, and go to state 138
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    set_expr       go to state 82
    func_call      go to state 141
    set_func_call  go to state 142
    simple_expr    go to state 79
    func_cte_expr  go to state 143
    arith_expr     go to state 144
    term           go to state 145
    factor         go to state 146


State 62

   33 set_func_call: EXISTS PARENT_LEFT . set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 130
    CHAR         shift, and go to state 131
    ID           shift, and go to state 132
    EMPTY        shift, and go to state 133
    STRING       shift, and go to state 134
    IS_SET       shift, and go to state 135
    ADD_SET      shift, and go to state 136
    REMOVE       shift, and go to state 137
    EXISTS       shift, and go to state 138
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    set_expr       go to state 83
    func_call      go to state 141
    set_func_call  go to state 142
    simple_expr    go to state 79
    func_cte_expr  go to state 143
    arith_expr     go to state 144
    term           go to state 145
    factor         go to state 146


State 63

   24 block_stmt: func_call SEMICOLON .

    BRACK_RIGHT  reduce using rule 24 (block_stmt)
    READ         reduce using rule 24 (block_stmt)
    WRITE        reduce using rule 24 (block_stmt)
    WRITELN      reduce using rule 24 (block_stmt)
    TYPE         reduce using rule 24 (block_stmt)
    ID           reduce using rule 24 (block_stmt)
    RETURN       reduce using rule 24 (block_stmt)
    FORALL       reduce using rule 24 (block_stmt)
    IS_SET       reduce using rule 24 (block_stmt)
    ADD_SET      reduce using rule 24 (block_stmt)
    REMOVE       reduce using rule 24 (block_stmt)
    EXISTS       reduce using rule 24 (block_stmt)


State 64

   27 block_stmt: set_func_call SEMICOLON .

    BRACK_RIGHT  reduce using rule 27 (block_stmt)
    READ         reduce using rule 27 (block_stmt)
    WRITE        reduce using rule 27 (block_stmt)
    WRITELN      reduce using rule 27 (block_stmt)
    TYPE         reduce using rule 27 (block_stmt)
    ID           reduce using rule 27 (block_stmt)
    RETURN       reduce using rule 27 (block_stmt)
    FORALL       reduce using rule 27 (block_stmt)
    IS_SET       reduce using rule 27 (block_stmt)
    ADD_SET      reduce using rule 27 (block_stmt)
    REMOVE       reduce using rule 27 (block_stmt)
    EXISTS       reduce using rule 27 (block_stmt)


State 65

   19 block_stmt: READ PARENT_LEFT ID . PARENT_RIGHT SEMICOLON

    PARENT_RIGHT  shift, and go to state 84


State 66

   20 block_stmt: WRITE PARENT_LEFT simple_expr . PARENT_RIGHT SEMICOLON

    PARENT_RIGHT  shift, and go to state 85


State 67

   21 block_stmt: WRITELN PARENT_LEFT simple_expr . PARENT_RIGHT SEMICOLON

    PARENT_RIGHT  shift, and go to state 86


State 68

   12 simple_param_list: ID .

    PARENT_RIGHT  reduce using rule 12 (simple_param_list)
    COMMA         reduce using rule 12 (simple_param_list)


State 69

   11 simple_param_list: simple_param_list . COMMA ID
   29 func_call: ID PARENT_LEFT simple_param_list . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 87
    COMMA         shift, and go to state 88


State 70

   23 block_stmt: ID ASSIGN simple_expr . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 71

   41 func_cte_expr: PARENT_LEFT func_cte_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 90


State 72

   42 arith_expr: arith_expr . ADD term
   43           | arith_expr . SUB term
   51 factor: PARENT_LEFT arith_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 91
    ADD           shift, and go to state 147
    SUB           shift, and go to state 148


State 73

   25 block_stmt: RETURN simple_expr SEMICOLON .

    BRACK_RIGHT  reduce using rule 25 (block_stmt)
    READ         reduce using rule 25 (block_stmt)
    WRITE        reduce using rule 25 (block_stmt)
    WRITELN      reduce using rule 25 (block_stmt)
    TYPE         reduce using rule 25 (block_stmt)
    ID           reduce using rule 25 (block_stmt)
    RETURN       reduce using rule 25 (block_stmt)
    FORALL       reduce using rule 25 (block_stmt)
    IS_SET       reduce using rule 25 (block_stmt)
    ADD_SET      reduce using rule 25 (block_stmt)
    REMOVE       reduce using rule 25 (block_stmt)
    EXISTS       reduce using rule 25 (block_stmt)


State 74

   42 arith_expr: arith_expr ADD . term

    PARENT_LEFT  shift, and go to state 92
    ID           shift, and go to state 93
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50

    term    go to state 94
    factor  go to state 57


State 75

   43 arith_expr: arith_expr SUB . term

    PARENT_LEFT  shift, and go to state 92
    ID           shift, and go to state 93
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50

    term    go to state 95
    factor  go to state 57


State 76

   45 term: term MULT . factor

    PARENT_LEFT  shift, and go to state 92
    ID           shift, and go to state 93
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50

    factor  go to state 96


State 77

   46 term: term DIV . factor

    PARENT_LEFT  shift, and go to state 92
    ID           shift, and go to state 93
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50

    factor  go to state 97


State 78

   26 block_stmt: FORALL PARENT_LEFT set_expr . PARENT_RIGHT flex_comp_block_stmt

    PARENT_RIGHT  shift, and go to state 98


State 79

   28 set_expr: simple_expr . IN simple_expr

    IN  shift, and go to state 99


State 80

   30 set_func_call: IS_SET PARENT_LEFT ID . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 100


State 81

   31 set_func_call: ADD_SET PARENT_LEFT set_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 101


State 82

   32 set_func_call: REMOVE PARENT_LEFT set_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 102


State 83

   33 set_func_call: EXISTS PARENT_LEFT set_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 103


State 84

   19 block_stmt: READ PARENT_LEFT ID PARENT_RIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 104


State 85

   20 block_stmt: WRITE PARENT_LEFT simple_expr PARENT_RIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 105


State 86

   21 block_stmt: WRITELN PARENT_LEFT simple_expr PARENT_RIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 106


State 87

   29 func_call: ID PARENT_LEFT simple_param_list PARENT_RIGHT .

    SEMICOLON  reduce using rule 29 (func_call)


State 88

   11 simple_param_list: simple_param_list COMMA . ID

    ID  shift, and go to state 107


State 89

   23 block_stmt: ID ASSIGN simple_expr SEMICOLON .

    BRACK_RIGHT  reduce using rule 23 (block_stmt)
    READ         reduce using rule 23 (block_stmt)
    WRITE        reduce using rule 23 (block_stmt)
    WRITELN      reduce using rule 23 (block_stmt)
    TYPE         reduce using rule 23 (block_stmt)
    ID           reduce using rule 23 (block_stmt)
    RETURN       reduce using rule 23 (block_stmt)
    FORALL       reduce using rule 23 (block_stmt)
    IS_SET       reduce using rule 23 (block_stmt)
    ADD_SET      reduce using rule 23 (block_stmt)
    REMOVE       reduce using rule 23 (block_stmt)
    EXISTS       reduce using rule 23 (block_stmt)


State 90

   41 func_cte_expr: PARENT_LEFT func_cte_expr PARENT_RIGHT .

    SEMICOLON  reduce using rule 41 (func_cte_expr)


State 91

   51 factor: PARENT_LEFT arith_expr PARENT_RIGHT .

    SEMICOLON  reduce using rule 51 (factor)
    ADD        reduce using rule 51 (factor)
    SUB        reduce using rule 51 (factor)
    MULT       reduce using rule 51 (factor)
    DIV        reduce using rule 51 (factor)


State 92

   51 factor: PARENT_LEFT . arith_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 149
    ID           shift, and go to state 150
    INTEGER      shift, and go to state 121
    FLOAT        shift, and go to state 122

    arith_expr  go to state 72
    term        go to state 127
    factor      go to state 128


State 93

   50 factor: ID .

    SEMICOLON  reduce using rule 50 (factor)
    ADD        reduce using rule 50 (factor)
    SUB        reduce using rule 50 (factor)
    MULT       reduce using rule 50 (factor)
    DIV        reduce using rule 50 (factor)


State 94

   42 arith_expr: arith_expr ADD term .
   45 term: term . MULT factor
   46     | term . DIV factor

    MULT  shift, and go to state 76
    DIV   shift, and go to state 77

    SEMICOLON  reduce using rule 42 (arith_expr)
    ADD        reduce using rule 42 (arith_expr)
    SUB        reduce using rule 42 (arith_expr)


State 95

   43 arith_expr: arith_expr SUB term .
   45 term: term . MULT factor
   46     | term . DIV factor

    MULT  shift, and go to state 76
    DIV   shift, and go to state 77

    SEMICOLON  reduce using rule 43 (arith_expr)
    ADD        reduce using rule 43 (arith_expr)
    SUB        reduce using rule 43 (arith_expr)


State 96

   45 term: term MULT factor .

    SEMICOLON  reduce using rule 45 (term)
    ADD        reduce using rule 45 (term)
    SUB        reduce using rule 45 (term)
    MULT       reduce using rule 45 (term)
    DIV        reduce using rule 45 (term)


State 97

   46 term: term DIV factor .

    SEMICOLON  reduce using rule 46 (term)
    ADD        reduce using rule 46 (term)
    SUB        reduce using rule 46 (term)
    MULT       reduce using rule 46 (term)
    DIV        reduce using rule 46 (term)


State 98

   26 block_stmt: FORALL PARENT_LEFT set_expr PARENT_RIGHT . flex_comp_block_stmt

    BRACK_LEFT  shift, and go to state 151
    READ        shift, and go to state 23
    WRITE       shift, and go to state 24
    WRITELN     shift, and go to state 25
    TYPE        shift, and go to state 26
    ID          shift, and go to state 27
    RETURN      shift, and go to state 28
    FORALL      shift, and go to state 29
    IS_SET      shift, and go to state 30
    ADD_SET     shift, and go to state 31
    REMOVE      shift, and go to state 32
    EXISTS      shift, and go to state 33

    var_decl_stmt         go to state 34
    flex_comp_block_stmt  go to state 108
    comp_block_stmt       go to state 109
    block_stmt            go to state 110
    func_call             go to state 36
    set_func_call         go to state 37


State 99

   28 set_expr: simple_expr IN . simple_expr

    PARENT_LEFT  shift, and go to state 112
    CHAR         shift, and go to state 113
    ID           shift, and go to state 114
    EMPTY        shift, and go to state 115
    STRING       shift, and go to state 116
    IS_SET       shift, and go to state 117
    ADD_SET      shift, and go to state 118
    REMOVE       shift, and go to state 119
    EXISTS       shift, and go to state 120
    INTEGER      shift, and go to state 121
    FLOAT        shift, and go to state 122

    func_call      go to state 123
    set_func_call  go to state 124
    simple_expr    go to state 111
    func_cte_expr  go to state 125
    arith_expr     go to state 126
    term           go to state 127
    factor         go to state 128


State 100

   30 set_func_call: IS_SET PARENT_LEFT ID PARENT_RIGHT .

    SEMICOLON  reduce using rule 30 (set_func_call)


State 101

   31 set_func_call: ADD_SET PARENT_LEFT set_expr PARENT_RIGHT .

    SEMICOLON  reduce using rule 31 (set_func_call)


State 102

   32 set_func_call: REMOVE PARENT_LEFT set_expr PARENT_RIGHT .

    SEMICOLON  reduce using rule 32 (set_func_call)


State 103

   33 set_func_call: EXISTS PARENT_LEFT set_expr PARENT_RIGHT .

    SEMICOLON  reduce using rule 33 (set_func_call)


State 104

   19 block_stmt: READ PARENT_LEFT ID PARENT_RIGHT SEMICOLON .

    BRACK_RIGHT  reduce using rule 19 (block_stmt)
    READ         reduce using rule 19 (block_stmt)
    WRITE        reduce using rule 19 (block_stmt)
    WRITELN      reduce using rule 19 (block_stmt)
    TYPE         reduce using rule 19 (block_stmt)
    ID           reduce using rule 19 (block_stmt)
    RETURN       reduce using rule 19 (block_stmt)
    FORALL       reduce using rule 19 (block_stmt)
    IS_SET       reduce using rule 19 (block_stmt)
    ADD_SET      reduce using rule 19 (block_stmt)
    REMOVE       reduce using rule 19 (block_stmt)
    EXISTS       reduce using rule 19 (block_stmt)


State 105

   20 block_stmt: WRITE PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON .

    BRACK_RIGHT  reduce using rule 20 (block_stmt)
    READ         reduce using rule 20 (block_stmt)
    WRITE        reduce using rule 20 (block_stmt)
    WRITELN      reduce using rule 20 (block_stmt)
    TYPE         reduce using rule 20 (block_stmt)
    ID           reduce using rule 20 (block_stmt)
    RETURN       reduce using rule 20 (block_stmt)
    FORALL       reduce using rule 20 (block_stmt)
    IS_SET       reduce using rule 20 (block_stmt)
    ADD_SET      reduce using rule 20 (block_stmt)
    REMOVE       reduce using rule 20 (block_stmt)
    EXISTS       reduce using rule 20 (block_stmt)


State 106

   21 block_stmt: WRITELN PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON .

    BRACK_RIGHT  reduce using rule 21 (block_stmt)
    READ         reduce using rule 21 (block_stmt)
    WRITE        reduce using rule 21 (block_stmt)
    WRITELN      reduce using rule 21 (block_stmt)
    TYPE         reduce using rule 21 (block_stmt)
    ID           reduce using rule 21 (block_stmt)
    RETURN       reduce using rule 21 (block_stmt)
    FORALL       reduce using rule 21 (block_stmt)
    IS_SET       reduce using rule 21 (block_stmt)
    ADD_SET      reduce using rule 21 (block_stmt)
    REMOVE       reduce using rule 21 (block_stmt)
    EXISTS       reduce using rule 21 (block_stmt)


State 107

   11 simple_param_list: simple_param_list COMMA ID .

    PARENT_RIGHT  reduce using rule 11 (simple_param_list)
    COMMA         reduce using rule 11 (simple_param_list)


State 108

   26 block_stmt: FORALL PARENT_LEFT set_expr PARENT_RIGHT flex_comp_block_stmt .

    BRACK_RIGHT  reduce using rule 26 (block_stmt)
    READ         reduce using rule 26 (block_stmt)
    WRITE        reduce using rule 26 (block_stmt)
    WRITELN      reduce using rule 26 (block_stmt)
    TYPE         reduce using rule 26 (block_stmt)
    ID           reduce using rule 26 (block_stmt)
    RETURN       reduce using rule 26 (block_stmt)
    FORALL       reduce using rule 26 (block_stmt)
    IS_SET       reduce using rule 26 (block_stmt)
    ADD_SET      reduce using rule 26 (block_stmt)
    REMOVE       reduce using rule 26 (block_stmt)
    EXISTS       reduce using rule 26 (block_stmt)


State 109

   14 flex_comp_block_stmt: comp_block_stmt .

    BRACK_RIGHT  reduce using rule 14 (flex_comp_block_stmt)
    READ         reduce using rule 14 (flex_comp_block_stmt)
    WRITE        reduce using rule 14 (flex_comp_block_stmt)
    WRITELN      reduce using rule 14 (flex_comp_block_stmt)
    TYPE         reduce using rule 14 (flex_comp_block_stmt)
    ID           reduce using rule 14 (flex_comp_block_stmt)
    RETURN       reduce using rule 14 (flex_comp_block_stmt)
    FORALL       reduce using rule 14 (flex_comp_block_stmt)
    IS_SET       reduce using rule 14 (flex_comp_block_stmt)
    ADD_SET      reduce using rule 14 (flex_comp_block_stmt)
    REMOVE       reduce using rule 14 (flex_comp_block_stmt)
    EXISTS       reduce using rule 14 (flex_comp_block_stmt)


State 110

   15 flex_comp_block_stmt: block_stmt .

    BRACK_RIGHT  reduce using rule 15 (flex_comp_block_stmt)
    READ         reduce using rule 15 (flex_comp_block_stmt)
    WRITE        reduce using rule 15 (flex_comp_block_stmt)
    WRITELN      reduce using rule 15 (flex_comp_block_stmt)
    TYPE         reduce using rule 15 (flex_comp_block_stmt)
    ID           reduce using rule 15 (flex_comp_block_stmt)
    RETURN       reduce using rule 15 (flex_comp_block_stmt)
    FORALL       reduce using rule 15 (flex_comp_block_stmt)
    IS_SET       reduce using rule 15 (flex_comp_block_stmt)
    ADD_SET      reduce using rule 15 (flex_comp_block_stmt)
    REMOVE       reduce using rule 15 (flex_comp_block_stmt)
    EXISTS       reduce using rule 15 (flex_comp_block_stmt)


State 111

   28 set_expr: simple_expr IN simple_expr .

    PARENT_RIGHT  reduce using rule 28 (set_expr)


State 112

   41 func_cte_expr: PARENT_LEFT . func_cte_expr PARENT_RIGHT
   51 factor: PARENT_LEFT . arith_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 112
    CHAR         shift, and go to state 113
    ID           shift, and go to state 114
    EMPTY        shift, and go to state 115
    STRING       shift, and go to state 116
    IS_SET       shift, and go to state 117
    ADD_SET      shift, and go to state 118
    REMOVE       shift, and go to state 119
    EXISTS       shift, and go to state 120
    INTEGER      shift, and go to state 121
    FLOAT        shift, and go to state 122

    func_call      go to state 123
    set_func_call  go to state 124
    func_cte_expr  go to state 152
    arith_expr     go to state 153
    term           go to state 127
    factor         go to state 128


State 113

   38 func_cte_expr: CHAR .

    PARENT_RIGHT  reduce using rule 38 (func_cte_expr)


State 114

   29 func_call: ID . PARENT_LEFT simple_param_list PARENT_RIGHT
   50 factor: ID .

    PARENT_LEFT  shift, and go to state 154

    PARENT_RIGHT  reduce using rule 50 (factor)
    ADD           reduce using rule 50 (factor)
    SUB           reduce using rule 50 (factor)
    MULT          reduce using rule 50 (factor)
    DIV           reduce using rule 50 (factor)


State 115

   36 func_cte_expr: EMPTY .

    PARENT_RIGHT  reduce using rule 36 (func_cte_expr)


State 116

   37 func_cte_expr: STRING .

    PARENT_RIGHT  reduce using rule 37 (func_cte_expr)


State 117

   30 set_func_call: IS_SET . PARENT_LEFT ID PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 155


State 118

   31 set_func_call: ADD_SET . PARENT_LEFT set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 156


State 119

   32 set_func_call: REMOVE . PARENT_LEFT set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 157


State 120

   33 set_func_call: EXISTS . PARENT_LEFT set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 158


State 121

   48 factor: INTEGER .

    PARENT_RIGHT  reduce using rule 48 (factor)
    ADD           reduce using rule 48 (factor)
    SUB           reduce using rule 48 (factor)
    MULT          reduce using rule 48 (factor)
    DIV           reduce using rule 48 (factor)


State 122

   49 factor: FLOAT .

    PARENT_RIGHT  reduce using rule 49 (factor)
    ADD           reduce using rule 49 (factor)
    SUB           reduce using rule 49 (factor)
    MULT          reduce using rule 49 (factor)
    DIV           reduce using rule 49 (factor)


State 123

   39 func_cte_expr: func_call .

    PARENT_RIGHT  reduce using rule 39 (func_cte_expr)


State 124

   40 func_cte_expr: set_func_call .

    PARENT_RIGHT  reduce using rule 40 (func_cte_expr)


State 125

   35 simple_expr: func_cte_expr .

    PARENT_RIGHT  reduce using rule 35 (simple_expr)


State 126

   34 simple_expr: arith_expr .
   42 arith_expr: arith_expr . ADD term
   43           | arith_expr . SUB term

    ADD  shift, and go to state 147
    SUB  shift, and go to state 148

    PARENT_RIGHT  reduce using rule 34 (simple_expr)


State 127

   44 arith_expr: term .
   45 term: term . MULT factor
   46     | term . DIV factor

    MULT  shift, and go to state 159
    DIV   shift, and go to state 160

    PARENT_RIGHT  reduce using rule 44 (arith_expr)
    ADD           reduce using rule 44 (arith_expr)
    SUB           reduce using rule 44 (arith_expr)


State 128

   47 term: factor .

    PARENT_RIGHT  reduce using rule 47 (term)
    ADD           reduce using rule 47 (term)
    SUB           reduce using rule 47 (term)
    MULT          reduce using rule 47 (term)
    DIV           reduce using rule 47 (term)


State 129

    7 var_decl_stmt: TYPE ID SEMICOLON .

    BRACK_RIGHT  reduce using rule 7 (var_decl_stmt)
    READ         reduce using rule 7 (var_decl_stmt)
    WRITE        reduce using rule 7 (var_decl_stmt)
    WRITELN      reduce using rule 7 (var_decl_stmt)
    TYPE         reduce using rule 7 (var_decl_stmt)
    ID           reduce using rule 7 (var_decl_stmt)
    RETURN       reduce using rule 7 (var_decl_stmt)
    FORALL       reduce using rule 7 (var_decl_stmt)
    IS_SET       reduce using rule 7 (var_decl_stmt)
    ADD_SET      reduce using rule 7 (var_decl_stmt)
    REMOVE       reduce using rule 7 (var_decl_stmt)
    EXISTS       reduce using rule 7 (var_decl_stmt)


State 130

   41 func_cte_expr: PARENT_LEFT . func_cte_expr PARENT_RIGHT
   51 factor: PARENT_LEFT . arith_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 112
    CHAR         shift, and go to state 113
    ID           shift, and go to state 114
    EMPTY        shift, and go to state 115
    STRING       shift, and go to state 116
    IS_SET       shift, and go to state 117
    ADD_SET      shift, and go to state 118
    REMOVE       shift, and go to state 119
    EXISTS       shift, and go to state 120
    INTEGER      shift, and go to state 121
    FLOAT        shift, and go to state 122

    func_call      go to state 123
    set_func_call  go to state 124
    func_cte_expr  go to state 161
    arith_expr     go to state 162
    term           go to state 127
    factor         go to state 128


State 131

   38 func_cte_expr: CHAR .

    IN  reduce using rule 38 (func_cte_expr)


State 132

   29 func_call: ID . PARENT_LEFT simple_param_list PARENT_RIGHT
   50 factor: ID .

    PARENT_LEFT  shift, and go to state 163

    ADD   reduce using rule 50 (factor)
    SUB   reduce using rule 50 (factor)
    MULT  reduce using rule 50 (factor)
    DIV   reduce using rule 50 (factor)
    IN    reduce using rule 50 (factor)


State 133

   36 func_cte_expr: EMPTY .

    IN  reduce using rule 36 (func_cte_expr)


State 134

   37 func_cte_expr: STRING .

    IN  reduce using rule 37 (func_cte_expr)


State 135

   30 set_func_call: IS_SET . PARENT_LEFT ID PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 164


State 136

   31 set_func_call: ADD_SET . PARENT_LEFT set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 165


State 137

   32 set_func_call: REMOVE . PARENT_LEFT set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 166


State 138

   33 set_func_call: EXISTS . PARENT_LEFT set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 167


State 139

   48 factor: INTEGER .

    ADD   reduce using rule 48 (factor)
    SUB   reduce using rule 48 (factor)
    MULT  reduce using rule 48 (factor)
    DIV   reduce using rule 48 (factor)
    IN    reduce using rule 48 (factor)


State 140

   49 factor: FLOAT .

    ADD   reduce using rule 49 (factor)
    SUB   reduce using rule 49 (factor)
    MULT  reduce using rule 49 (factor)
    DIV   reduce using rule 49 (factor)
    IN    reduce using rule 49 (factor)


State 141

   39 func_cte_expr: func_call .

    IN  reduce using rule 39 (func_cte_expr)


State 142

   40 func_cte_expr: set_func_call .

    IN  reduce using rule 40 (func_cte_expr)


State 143

   35 simple_expr: func_cte_expr .

    IN  reduce using rule 35 (simple_expr)


State 144

   34 simple_expr: arith_expr .
   42 arith_expr: arith_expr . ADD term
   43           | arith_expr . SUB term

    ADD  shift, and go to state 168
    SUB  shift, and go to state 169

    IN  reduce using rule 34 (simple_expr)


State 145

   44 arith_expr: term .
   45 term: term . MULT factor
   46     | term . DIV factor

    MULT  shift, and go to state 170
    DIV   shift, and go to state 171

    ADD  reduce using rule 44 (arith_expr)
    SUB  reduce using rule 44 (arith_expr)
    IN   reduce using rule 44 (arith_expr)


State 146

   47 term: factor .

    ADD   reduce using rule 47 (term)
    SUB   reduce using rule 47 (term)
    MULT  reduce using rule 47 (term)
    DIV   reduce using rule 47 (term)
    IN    reduce using rule 47 (term)


State 147

   42 arith_expr: arith_expr ADD . term

    PARENT_LEFT  shift, and go to state 149
    ID           shift, and go to state 150
    INTEGER      shift, and go to state 121
    FLOAT        shift, and go to state 122

    term    go to state 172
    factor  go to state 128


State 148

   43 arith_expr: arith_expr SUB . term

    PARENT_LEFT  shift, and go to state 149
    ID           shift, and go to state 150
    INTEGER      shift, and go to state 121
    FLOAT        shift, and go to state 122

    term    go to state 173
    factor  go to state 128


State 149

   51 factor: PARENT_LEFT . arith_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 149
    ID           shift, and go to state 150
    INTEGER      shift, and go to state 121
    FLOAT        shift, and go to state 122

    arith_expr  go to state 153
    term        go to state 127
    factor      go to state 128


State 150

   50 factor: ID .

    PARENT_RIGHT  reduce using rule 50 (factor)
    ADD           reduce using rule 50 (factor)
    SUB           reduce using rule 50 (factor)
    MULT          reduce using rule 50 (factor)
    DIV           reduce using rule 50 (factor)


State 151

   16 comp_block_stmt: BRACK_LEFT . block_stmts BRACK_RIGHT

    BRACK_RIGHT  reduce using rule 18 (block_stmts)
    READ         reduce using rule 18 (block_stmts)
    WRITE        reduce using rule 18 (block_stmts)
    WRITELN      reduce using rule 18 (block_stmts)
    TYPE         reduce using rule 18 (block_stmts)
    ID           reduce using rule 18 (block_stmts)
    RETURN       reduce using rule 18 (block_stmts)
    FORALL       reduce using rule 18 (block_stmts)
    IS_SET       reduce using rule 18 (block_stmts)
    ADD_SET      reduce using rule 18 (block_stmts)
    REMOVE       reduce using rule 18 (block_stmts)
    EXISTS       reduce using rule 18 (block_stmts)

    block_stmts  go to state 174


State 152

   41 func_cte_expr: PARENT_LEFT func_cte_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 175


State 153

   42 arith_expr: arith_expr . ADD term
   43           | arith_expr . SUB term
   51 factor: PARENT_LEFT arith_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 176
    ADD           shift, and go to state 147
    SUB           shift, and go to state 148


State 154

   29 func_call: ID PARENT_LEFT . simple_param_list PARENT_RIGHT

    ID  shift, and go to state 68

    PARENT_RIGHT  reduce using rule 13 (simple_param_list)
    COMMA         reduce using rule 13 (simple_param_list)

    simple_param_list  go to state 177


State 155

   30 set_func_call: IS_SET PARENT_LEFT . ID PARENT_RIGHT

    ID  shift, and go to state 178


State 156

   31 set_func_call: ADD_SET PARENT_LEFT . set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 130
    CHAR         shift, and go to state 131
    ID           shift, and go to state 132
    EMPTY        shift, and go to state 133
    STRING       shift, and go to state 134
    IS_SET       shift, and go to state 135
    ADD_SET      shift, and go to state 136
    REMOVE       shift, and go to state 137
    EXISTS       shift, and go to state 138
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    set_expr       go to state 179
    func_call      go to state 141
    set_func_call  go to state 142
    simple_expr    go to state 79
    func_cte_expr  go to state 143
    arith_expr     go to state 144
    term           go to state 145
    factor         go to state 146


State 157

   32 set_func_call: REMOVE PARENT_LEFT . set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 130
    CHAR         shift, and go to state 131
    ID           shift, and go to state 132
    EMPTY        shift, and go to state 133
    STRING       shift, and go to state 134
    IS_SET       shift, and go to state 135
    ADD_SET      shift, and go to state 136
    REMOVE       shift, and go to state 137
    EXISTS       shift, and go to state 138
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    set_expr       go to state 180
    func_call      go to state 141
    set_func_call  go to state 142
    simple_expr    go to state 79
    func_cte_expr  go to state 143
    arith_expr     go to state 144
    term           go to state 145
    factor         go to state 146


State 158

   33 set_func_call: EXISTS PARENT_LEFT . set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 130
    CHAR         shift, and go to state 131
    ID           shift, and go to state 132
    EMPTY        shift, and go to state 133
    STRING       shift, and go to state 134
    IS_SET       shift, and go to state 135
    ADD_SET      shift, and go to state 136
    REMOVE       shift, and go to state 137
    EXISTS       shift, and go to state 138
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    set_expr       go to state 181
    func_call      go to state 141
    set_func_call  go to state 142
    simple_expr    go to state 79
    func_cte_expr  go to state 143
    arith_expr     go to state 144
    term           go to state 145
    factor         go to state 146


State 159

   45 term: term MULT . factor

    PARENT_LEFT  shift, and go to state 149
    ID           shift, and go to state 150
    INTEGER      shift, and go to state 121
    FLOAT        shift, and go to state 122

    factor  go to state 182


State 160

   46 term: term DIV . factor

    PARENT_LEFT  shift, and go to state 149
    ID           shift, and go to state 150
    INTEGER      shift, and go to state 121
    FLOAT        shift, and go to state 122

    factor  go to state 183


State 161

   41 func_cte_expr: PARENT_LEFT func_cte_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 184


State 162

   42 arith_expr: arith_expr . ADD term
   43           | arith_expr . SUB term
   51 factor: PARENT_LEFT arith_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 185
    ADD           shift, and go to state 147
    SUB           shift, and go to state 148


State 163

   29 func_call: ID PARENT_LEFT . simple_param_list PARENT_RIGHT

    ID  shift, and go to state 68

    PARENT_RIGHT  reduce using rule 13 (simple_param_list)
    COMMA         reduce using rule 13 (simple_param_list)

    simple_param_list  go to state 186


State 164

   30 set_func_call: IS_SET PARENT_LEFT . ID PARENT_RIGHT

    ID  shift, and go to state 187


State 165

   31 set_func_call: ADD_SET PARENT_LEFT . set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 130
    CHAR         shift, and go to state 131
    ID           shift, and go to state 132
    EMPTY        shift, and go to state 133
    STRING       shift, and go to state 134
    IS_SET       shift, and go to state 135
    ADD_SET      shift, and go to state 136
    REMOVE       shift, and go to state 137
    EXISTS       shift, and go to state 138
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    set_expr       go to state 188
    func_call      go to state 141
    set_func_call  go to state 142
    simple_expr    go to state 79
    func_cte_expr  go to state 143
    arith_expr     go to state 144
    term           go to state 145
    factor         go to state 146


State 166

   32 set_func_call: REMOVE PARENT_LEFT . set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 130
    CHAR         shift, and go to state 131
    ID           shift, and go to state 132
    EMPTY        shift, and go to state 133
    STRING       shift, and go to state 134
    IS_SET       shift, and go to state 135
    ADD_SET      shift, and go to state 136
    REMOVE       shift, and go to state 137
    EXISTS       shift, and go to state 138
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    set_expr       go to state 189
    func_call      go to state 141
    set_func_call  go to state 142
    simple_expr    go to state 79
    func_cte_expr  go to state 143
    arith_expr     go to state 144
    term           go to state 145
    factor         go to state 146


State 167

   33 set_func_call: EXISTS PARENT_LEFT . set_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 130
    CHAR         shift, and go to state 131
    ID           shift, and go to state 132
    EMPTY        shift, and go to state 133
    STRING       shift, and go to state 134
    IS_SET       shift, and go to state 135
    ADD_SET      shift, and go to state 136
    REMOVE       shift, and go to state 137
    EXISTS       shift, and go to state 138
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    set_expr       go to state 190
    func_call      go to state 141
    set_func_call  go to state 142
    simple_expr    go to state 79
    func_cte_expr  go to state 143
    arith_expr     go to state 144
    term           go to state 145
    factor         go to state 146


State 168

   42 arith_expr: arith_expr ADD . term

    PARENT_LEFT  shift, and go to state 191
    ID           shift, and go to state 192
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    term    go to state 193
    factor  go to state 146


State 169

   43 arith_expr: arith_expr SUB . term

    PARENT_LEFT  shift, and go to state 191
    ID           shift, and go to state 192
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    term    go to state 194
    factor  go to state 146


State 170

   45 term: term MULT . factor

    PARENT_LEFT  shift, and go to state 191
    ID           shift, and go to state 192
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    factor  go to state 195


State 171

   46 term: term DIV . factor

    PARENT_LEFT  shift, and go to state 191
    ID           shift, and go to state 192
    INTEGER      shift, and go to state 139
    FLOAT        shift, and go to state 140

    factor  go to state 196


State 172

   42 arith_expr: arith_expr ADD term .
   45 term: term . MULT factor
   46     | term . DIV factor

    MULT  shift, and go to state 159
    DIV   shift, and go to state 160

    PARENT_RIGHT  reduce using rule 42 (arith_expr)
    ADD           reduce using rule 42 (arith_expr)
    SUB           reduce using rule 42 (arith_expr)


State 173

   43 arith_expr: arith_expr SUB term .
   45 term: term . MULT factor
   46     | term . DIV factor

    MULT  shift, and go to state 159
    DIV   shift, and go to state 160

    PARENT_RIGHT  reduce using rule 43 (arith_expr)
    ADD           reduce using rule 43 (arith_expr)
    SUB           reduce using rule 43 (arith_expr)


State 174

   16 comp_block_stmt: BRACK_LEFT block_stmts . BRACK_RIGHT
   17 block_stmts: block_stmts . block_stmt

    BRACK_RIGHT  shift, and go to state 197
    READ         shift, and go to state 23
    WRITE        shift, and go to state 24
    WRITELN      shift, and go to state 25
    TYPE         shift, and go to state 26
    ID           shift, and go to state 27
    RETURN       shift, and go to state 28
    FORALL       shift, and go to state 29
    IS_SET       shift, and go to state 30
    ADD_SET      shift, and go to state 31
    REMOVE       shift, and go to state 32
    EXISTS       shift, and go to state 33

    var_decl_stmt  go to state 34
    block_stmt     go to state 35
    func_call      go to state 36
    set_func_call  go to state 37


State 175

   41 func_cte_expr: PARENT_LEFT func_cte_expr PARENT_RIGHT .

    PARENT_RIGHT  reduce using rule 41 (func_cte_expr)


State 176

   51 factor: PARENT_LEFT arith_expr PARENT_RIGHT .

    PARENT_RIGHT  reduce using rule 51 (factor)
    ADD           reduce using rule 51 (factor)
    SUB           reduce using rule 51 (factor)
    MULT          reduce using rule 51 (factor)
    DIV           reduce using rule 51 (factor)


State 177

   11 simple_param_list: simple_param_list . COMMA ID
   29 func_call: ID PARENT_LEFT simple_param_list . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 198
    COMMA         shift, and go to state 88


State 178

   30 set_func_call: IS_SET PARENT_LEFT ID . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 199


State 179

   31 set_func_call: ADD_SET PARENT_LEFT set_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 200


State 180

   32 set_func_call: REMOVE PARENT_LEFT set_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 201


State 181

   33 set_func_call: EXISTS PARENT_LEFT set_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 202


State 182

   45 term: term MULT factor .

    PARENT_RIGHT  reduce using rule 45 (term)
    ADD           reduce using rule 45 (term)
    SUB           reduce using rule 45 (term)
    MULT          reduce using rule 45 (term)
    DIV           reduce using rule 45 (term)


State 183

   46 term: term DIV factor .

    PARENT_RIGHT  reduce using rule 46 (term)
    ADD           reduce using rule 46 (term)
    SUB           reduce using rule 46 (term)
    MULT          reduce using rule 46 (term)
    DIV           reduce using rule 46 (term)


State 184

   41 func_cte_expr: PARENT_LEFT func_cte_expr PARENT_RIGHT .

    IN  reduce using rule 41 (func_cte_expr)


State 185

   51 factor: PARENT_LEFT arith_expr PARENT_RIGHT .

    ADD   reduce using rule 51 (factor)
    SUB   reduce using rule 51 (factor)
    MULT  reduce using rule 51 (factor)
    DIV   reduce using rule 51 (factor)
    IN    reduce using rule 51 (factor)


State 186

   11 simple_param_list: simple_param_list . COMMA ID
   29 func_call: ID PARENT_LEFT simple_param_list . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 203
    COMMA         shift, and go to state 88


State 187

   30 set_func_call: IS_SET PARENT_LEFT ID . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 204


State 188

   31 set_func_call: ADD_SET PARENT_LEFT set_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 205


State 189

   32 set_func_call: REMOVE PARENT_LEFT set_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 206


State 190

   33 set_func_call: EXISTS PARENT_LEFT set_expr . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 207


State 191

   51 factor: PARENT_LEFT . arith_expr PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 149
    ID           shift, and go to state 150
    INTEGER      shift, and go to state 121
    FLOAT        shift, and go to state 122

    arith_expr  go to state 162
    term        go to state 127
    factor      go to state 128


State 192

   50 factor: ID .

    ADD   reduce using rule 50 (factor)
    SUB   reduce using rule 50 (factor)
    MULT  reduce using rule 50 (factor)
    DIV   reduce using rule 50 (factor)
    IN    reduce using rule 50 (factor)


State 193

   42 arith_expr: arith_expr ADD term .
   45 term: term . MULT factor
   46     | term . DIV factor

    MULT  shift, and go to state 170
    DIV   shift, and go to state 171

    ADD  reduce using rule 42 (arith_expr)
    SUB  reduce using rule 42 (arith_expr)
    IN   reduce using rule 42 (arith_expr)


State 194

   43 arith_expr: arith_expr SUB term .
   45 term: term . MULT factor
   46     | term . DIV factor

    MULT  shift, and go to state 170
    DIV   shift, and go to state 171

    ADD  reduce using rule 43 (arith_expr)
    SUB  reduce using rule 43 (arith_expr)
    IN   reduce using rule 43 (arith_expr)


State 195

   45 term: term MULT factor .

    ADD   reduce using rule 45 (term)
    SUB   reduce using rule 45 (term)
    MULT  reduce using rule 45 (term)
    DIV   reduce using rule 45 (term)
    IN    reduce using rule 45 (term)


State 196

   46 term: term DIV factor .

    ADD   reduce using rule 46 (term)
    SUB   reduce using rule 46 (term)
    MULT  reduce using rule 46 (term)
    DIV   reduce using rule 46 (term)
    IN    reduce using rule 46 (term)


State 197

   16 comp_block_stmt: BRACK_LEFT block_stmts BRACK_RIGHT .

    BRACK_RIGHT  reduce using rule 16 (comp_block_stmt)
    READ         reduce using rule 16 (comp_block_stmt)
    WRITE        reduce using rule 16 (comp_block_stmt)
    WRITELN      reduce using rule 16 (comp_block_stmt)
    TYPE         reduce using rule 16 (comp_block_stmt)
    ID           reduce using rule 16 (comp_block_stmt)
    RETURN       reduce using rule 16 (comp_block_stmt)
    FORALL       reduce using rule 16 (comp_block_stmt)
    IS_SET       reduce using rule 16 (comp_block_stmt)
    ADD_SET      reduce using rule 16 (comp_block_stmt)
    REMOVE       reduce using rule 16 (comp_block_stmt)
    EXISTS       reduce using rule 16 (comp_block_stmt)


State 198

   29 func_call: ID PARENT_LEFT simple_param_list PARENT_RIGHT .

    PARENT_RIGHT  reduce using rule 29 (func_call)


State 199

   30 set_func_call: IS_SET PARENT_LEFT ID PARENT_RIGHT .

    PARENT_RIGHT  reduce using rule 30 (set_func_call)


State 200

   31 set_func_call: ADD_SET PARENT_LEFT set_expr PARENT_RIGHT .

    PARENT_RIGHT  reduce using rule 31 (set_func_call)


State 201

   32 set_func_call: REMOVE PARENT_LEFT set_expr PARENT_RIGHT .

    PARENT_RIGHT  reduce using rule 32 (set_func_call)


State 202

   33 set_func_call: EXISTS PARENT_LEFT set_expr PARENT_RIGHT .

    PARENT_RIGHT  reduce using rule 33 (set_func_call)


State 203

   29 func_call: ID PARENT_LEFT simple_param_list PARENT_RIGHT .

    IN  reduce using rule 29 (func_call)


State 204

   30 set_func_call: IS_SET PARENT_LEFT ID PARENT_RIGHT .

    IN  reduce using rule 30 (set_func_call)


State 205

   31 set_func_call: ADD_SET PARENT_LEFT set_expr PARENT_RIGHT .

    IN  reduce using rule 31 (set_func_call)


State 206

   32 set_func_call: REMOVE PARENT_LEFT set_expr PARENT_RIGHT .

    IN  reduce using rule 32 (set_func_call)


State 207

   33 set_func_call: EXISTS PARENT_LEFT set_expr PARENT_RIGHT .

    IN  reduce using rule 33 (set_func_call)
