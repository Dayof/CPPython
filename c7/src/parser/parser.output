Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmts stmt
    3      | stmt

    4 stmt: func_stmt
    5     | var_decl_stmt

    6 func_stmt: TYPE ID PARENT_LEFT PARENT_RIGHT comp_block_stmt

    7 var_decl_stmt: TYPE ID SEMICOLON

    8 comp_block_stmt: BRACK_LEFT block_stmts BRACK_RIGHT

    9 block_stmts: block_stmts block_stmt
   10            | %empty

   11 block_stmt: READ PARENT_LEFT ID PARENT_RIGHT SEMICOLON
   12           | WRITE PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON
   13           | WRITELN PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON
   14           | var_decl_stmt

   15 simple_expr: arith_expr
   16            | EMPTY

   17 arith_expr: arith_expr ADD term
   18           | arith_expr SUB term
   19           | term

   20 term: term MULT factor
   21     | term DIV factor
   22     | factor

   23 factor: INTEGER
   24       | FLOAT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BRACK_LEFT <op> (258) 8
    BRACK_RIGHT <op> (259) 8
    PARENT_LEFT <op> (260) 6 11 12 13
    PARENT_RIGHT <op> (261) 6 11 12 13
    SEMICOLON <op> (262) 7 11 12 13
    ADD <op> (263) 17
    SUB <op> (264) 18
    MULT <op> (265) 20
    DIV <op> (266) 21
    READ <str_value> (267) 11
    WRITE <str_value> (268) 12
    WRITELN <str_value> (269) 13
    TYPE <str_value> (270) 6 7
    ID <str_value> (271) 6 7 11
    EMPTY <str_value> (272) 16
    INTEGER <int_value> (273) 23
    FLOAT <float_value> (274) 24


Nonterminals, with rules where they appear

    $accept (20)
        on left: 0
    program (21)
        on left: 1
        on right: 0
    stmts (22)
        on left: 2 3
        on right: 1 2
    stmt (23)
        on left: 4 5
        on right: 2 3
    func_stmt (24)
        on left: 6
        on right: 4
    var_decl_stmt (25)
        on left: 7
        on right: 5 14
    comp_block_stmt (26)
        on left: 8
        on right: 6
    block_stmts (27)
        on left: 9 10
        on right: 8 9
    block_stmt (28)
        on left: 11 12 13 14
        on right: 9
    simple_expr (29)
        on left: 15 16
        on right: 12 13
    arith_expr (30)
        on left: 17 18 19
        on right: 15 17 18
    term (31)
        on left: 20 21 22
        on right: 17 18 19 20 21
    factor (32)
        on left: 23 24
        on right: 20 21 22


State 0

    0 $accept: . program $end

    TYPE  shift, and go to state 1

    program        go to state 2
    stmts          go to state 3
    stmt           go to state 4
    func_stmt      go to state 5
    var_decl_stmt  go to state 6


State 1

    6 func_stmt: TYPE . ID PARENT_LEFT PARENT_RIGHT comp_block_stmt
    7 var_decl_stmt: TYPE . ID SEMICOLON

    ID  shift, and go to state 7


State 2

    0 $accept: program . $end

    $end  shift, and go to state 8


State 3

    1 program: stmts .
    2 stmts: stmts . stmt

    TYPE  shift, and go to state 1

    $end  reduce using rule 1 (program)

    stmt           go to state 9
    func_stmt      go to state 5
    var_decl_stmt  go to state 6


State 4

    3 stmts: stmt .

    $end  reduce using rule 3 (stmts)
    TYPE  reduce using rule 3 (stmts)


State 5

    4 stmt: func_stmt .

    $end  reduce using rule 4 (stmt)
    TYPE  reduce using rule 4 (stmt)


State 6

    5 stmt: var_decl_stmt .

    $end  reduce using rule 5 (stmt)
    TYPE  reduce using rule 5 (stmt)


State 7

    6 func_stmt: TYPE ID . PARENT_LEFT PARENT_RIGHT comp_block_stmt
    7 var_decl_stmt: TYPE ID . SEMICOLON

    PARENT_LEFT  shift, and go to state 10
    SEMICOLON    shift, and go to state 11


State 8

    0 $accept: program $end .

    $default  accept


State 9

    2 stmts: stmts stmt .

    $end  reduce using rule 2 (stmts)
    TYPE  reduce using rule 2 (stmts)


State 10

    6 func_stmt: TYPE ID PARENT_LEFT . PARENT_RIGHT comp_block_stmt

    PARENT_RIGHT  shift, and go to state 12


State 11

    7 var_decl_stmt: TYPE ID SEMICOLON .

    $end  reduce using rule 7 (var_decl_stmt)
    TYPE  reduce using rule 7 (var_decl_stmt)


State 12

    6 func_stmt: TYPE ID PARENT_LEFT PARENT_RIGHT . comp_block_stmt

    BRACK_LEFT  shift, and go to state 13

    comp_block_stmt  go to state 14


State 13

    8 comp_block_stmt: BRACK_LEFT . block_stmts BRACK_RIGHT

    BRACK_RIGHT  reduce using rule 10 (block_stmts)
    READ         reduce using rule 10 (block_stmts)
    WRITE        reduce using rule 10 (block_stmts)
    WRITELN      reduce using rule 10 (block_stmts)
    TYPE         reduce using rule 10 (block_stmts)

    block_stmts  go to state 15


State 14

    6 func_stmt: TYPE ID PARENT_LEFT PARENT_RIGHT comp_block_stmt .

    $end  reduce using rule 6 (func_stmt)
    TYPE  reduce using rule 6 (func_stmt)


State 15

    8 comp_block_stmt: BRACK_LEFT block_stmts . BRACK_RIGHT
    9 block_stmts: block_stmts . block_stmt

    BRACK_RIGHT  shift, and go to state 16
    READ         shift, and go to state 17
    WRITE        shift, and go to state 18
    WRITELN      shift, and go to state 19
    TYPE         shift, and go to state 20

    var_decl_stmt  go to state 21
    block_stmt     go to state 22


State 16

    8 comp_block_stmt: BRACK_LEFT block_stmts BRACK_RIGHT .

    $end  reduce using rule 8 (comp_block_stmt)
    TYPE  reduce using rule 8 (comp_block_stmt)


State 17

   11 block_stmt: READ . PARENT_LEFT ID PARENT_RIGHT SEMICOLON

    PARENT_LEFT  shift, and go to state 23


State 18

   12 block_stmt: WRITE . PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON

    PARENT_LEFT  shift, and go to state 24


State 19

   13 block_stmt: WRITELN . PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON

    PARENT_LEFT  shift, and go to state 25


State 20

    7 var_decl_stmt: TYPE . ID SEMICOLON

    ID  shift, and go to state 26


State 21

   14 block_stmt: var_decl_stmt .

    BRACK_RIGHT  reduce using rule 14 (block_stmt)
    READ         reduce using rule 14 (block_stmt)
    WRITE        reduce using rule 14 (block_stmt)
    WRITELN      reduce using rule 14 (block_stmt)
    TYPE         reduce using rule 14 (block_stmt)


State 22

    9 block_stmts: block_stmts block_stmt .

    BRACK_RIGHT  reduce using rule 9 (block_stmts)
    READ         reduce using rule 9 (block_stmts)
    WRITE        reduce using rule 9 (block_stmts)
    WRITELN      reduce using rule 9 (block_stmts)
    TYPE         reduce using rule 9 (block_stmts)


State 23

   11 block_stmt: READ PARENT_LEFT . ID PARENT_RIGHT SEMICOLON

    ID  shift, and go to state 27


State 24

   12 block_stmt: WRITE PARENT_LEFT . simple_expr PARENT_RIGHT SEMICOLON

    EMPTY    shift, and go to state 28
    INTEGER  shift, and go to state 29
    FLOAT    shift, and go to state 30

    simple_expr  go to state 31
    arith_expr   go to state 32
    term         go to state 33
    factor       go to state 34


State 25

   13 block_stmt: WRITELN PARENT_LEFT . simple_expr PARENT_RIGHT SEMICOLON

    EMPTY    shift, and go to state 28
    INTEGER  shift, and go to state 29
    FLOAT    shift, and go to state 30

    simple_expr  go to state 35
    arith_expr   go to state 32
    term         go to state 33
    factor       go to state 34


State 26

    7 var_decl_stmt: TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 27

   11 block_stmt: READ PARENT_LEFT ID . PARENT_RIGHT SEMICOLON

    PARENT_RIGHT  shift, and go to state 36


State 28

   16 simple_expr: EMPTY .

    PARENT_RIGHT  reduce using rule 16 (simple_expr)


State 29

   23 factor: INTEGER .

    PARENT_RIGHT  reduce using rule 23 (factor)
    ADD           reduce using rule 23 (factor)
    SUB           reduce using rule 23 (factor)
    MULT          reduce using rule 23 (factor)
    DIV           reduce using rule 23 (factor)


State 30

   24 factor: FLOAT .

    PARENT_RIGHT  reduce using rule 24 (factor)
    ADD           reduce using rule 24 (factor)
    SUB           reduce using rule 24 (factor)
    MULT          reduce using rule 24 (factor)
    DIV           reduce using rule 24 (factor)


State 31

   12 block_stmt: WRITE PARENT_LEFT simple_expr . PARENT_RIGHT SEMICOLON

    PARENT_RIGHT  shift, and go to state 37


State 32

   15 simple_expr: arith_expr .
   17 arith_expr: arith_expr . ADD term
   18           | arith_expr . SUB term

    ADD  shift, and go to state 38
    SUB  shift, and go to state 39

    PARENT_RIGHT  reduce using rule 15 (simple_expr)


State 33

   19 arith_expr: term .
   20 term: term . MULT factor
   21     | term . DIV factor

    MULT  shift, and go to state 40
    DIV   shift, and go to state 41

    PARENT_RIGHT  reduce using rule 19 (arith_expr)
    ADD           reduce using rule 19 (arith_expr)
    SUB           reduce using rule 19 (arith_expr)


State 34

   22 term: factor .

    PARENT_RIGHT  reduce using rule 22 (term)
    ADD           reduce using rule 22 (term)
    SUB           reduce using rule 22 (term)
    MULT          reduce using rule 22 (term)
    DIV           reduce using rule 22 (term)


State 35

   13 block_stmt: WRITELN PARENT_LEFT simple_expr . PARENT_RIGHT SEMICOLON

    PARENT_RIGHT  shift, and go to state 42


State 36

   11 block_stmt: READ PARENT_LEFT ID PARENT_RIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 37

   12 block_stmt: WRITE PARENT_LEFT simple_expr PARENT_RIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 38

   17 arith_expr: arith_expr ADD . term

    INTEGER  shift, and go to state 29
    FLOAT    shift, and go to state 30

    term    go to state 45
    factor  go to state 34


State 39

   18 arith_expr: arith_expr SUB . term

    INTEGER  shift, and go to state 29
    FLOAT    shift, and go to state 30

    term    go to state 46
    factor  go to state 34


State 40

   20 term: term MULT . factor

    INTEGER  shift, and go to state 29
    FLOAT    shift, and go to state 30

    factor  go to state 47


State 41

   21 term: term DIV . factor

    INTEGER  shift, and go to state 29
    FLOAT    shift, and go to state 30

    factor  go to state 48


State 42

   13 block_stmt: WRITELN PARENT_LEFT simple_expr PARENT_RIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 43

   11 block_stmt: READ PARENT_LEFT ID PARENT_RIGHT SEMICOLON .

    BRACK_RIGHT  reduce using rule 11 (block_stmt)
    READ         reduce using rule 11 (block_stmt)
    WRITE        reduce using rule 11 (block_stmt)
    WRITELN      reduce using rule 11 (block_stmt)
    TYPE         reduce using rule 11 (block_stmt)


State 44

   12 block_stmt: WRITE PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON .

    BRACK_RIGHT  reduce using rule 12 (block_stmt)
    READ         reduce using rule 12 (block_stmt)
    WRITE        reduce using rule 12 (block_stmt)
    WRITELN      reduce using rule 12 (block_stmt)
    TYPE         reduce using rule 12 (block_stmt)


State 45

   17 arith_expr: arith_expr ADD term .
   20 term: term . MULT factor
   21     | term . DIV factor

    MULT  shift, and go to state 40
    DIV   shift, and go to state 41

    PARENT_RIGHT  reduce using rule 17 (arith_expr)
    ADD           reduce using rule 17 (arith_expr)
    SUB           reduce using rule 17 (arith_expr)


State 46

   18 arith_expr: arith_expr SUB term .
   20 term: term . MULT factor
   21     | term . DIV factor

    MULT  shift, and go to state 40
    DIV   shift, and go to state 41

    PARENT_RIGHT  reduce using rule 18 (arith_expr)
    ADD           reduce using rule 18 (arith_expr)
    SUB           reduce using rule 18 (arith_expr)


State 47

   20 term: term MULT factor .

    PARENT_RIGHT  reduce using rule 20 (term)
    ADD           reduce using rule 20 (term)
    SUB           reduce using rule 20 (term)
    MULT          reduce using rule 20 (term)
    DIV           reduce using rule 20 (term)


State 48

   21 term: term DIV factor .

    PARENT_RIGHT  reduce using rule 21 (term)
    ADD           reduce using rule 21 (term)
    SUB           reduce using rule 21 (term)
    MULT          reduce using rule 21 (term)
    DIV           reduce using rule 21 (term)


State 49

   13 block_stmt: WRITELN PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON .

    BRACK_RIGHT  reduce using rule 13 (block_stmt)
    READ         reduce using rule 13 (block_stmt)
    WRITE        reduce using rule 13 (block_stmt)
    WRITELN      reduce using rule 13 (block_stmt)
    TYPE         reduce using rule 13 (block_stmt)


State 50

    7 var_decl_stmt: TYPE ID SEMICOLON .

    BRACK_RIGHT  reduce using rule 7 (var_decl_stmt)
    READ         reduce using rule 7 (var_decl_stmt)
    WRITE        reduce using rule 7 (var_decl_stmt)
    WRITELN      reduce using rule 7 (var_decl_stmt)
    TYPE         reduce using rule 7 (var_decl_stmt)
