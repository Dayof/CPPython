Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmts stmt
    3      | stmt

    4 stmt: func_stmt
    5     | var_decl_stmt

    6 func_stmt: TYPE ID PARENT_LEFT param_list PARENT_RIGHT comp_block_stmt

    7 var_decl_stmt: TYPE ID SEMICOLON

    8 param_list: param_list COMMA TYPE ID
    9           | TYPE ID
   10           | %empty

   11 simple_param_list: simple_param_list COMMA ID
   12                  | ID
   13                  | %empty

   14 flex_comp_block_stmt: comp_block_stmt
   15                     | block_stmt

   16 comp_block_stmt: BRACK_LEFT block_stmts BRACK_RIGHT

   17 block_stmts: block_stmts block_stmt
   18            | %empty

   19 block_stmt: READ PARENT_LEFT ID PARENT_RIGHT SEMICOLON
   20           | WRITE PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON
   21           | WRITELN PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON
   22           | var_decl_stmt
   23           | ID ASSIGN simple_expr SEMICOLON
   24           | func_call SEMICOLON
   25           | RETURN simple_expr SEMICOLON
   26           | FORALL PARENT_LEFT set_expr PARENT_RIGHT flex_comp_block_stmt

   27 set_expr: ID IN ID

   28 func_call: ID PARENT_LEFT simple_param_list PARENT_RIGHT

   29 simple_expr: arith_expr
   30            | EMPTY
   31            | STRING
   32            | CHAR
   33            | func_call

   34 arith_expr: arith_expr ADD term
   35           | arith_expr SUB term
   36           | term

   37 term: term MULT factor
   38     | term DIV factor
   39     | factor

   40 factor: INTEGER
   41       | FLOAT
   42       | ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BRACK_LEFT <op> (258) 16
    BRACK_RIGHT <op> (259) 16
    PARENT_LEFT <op> (260) 6 19 20 21 26 28
    PARENT_RIGHT <op> (261) 6 19 20 21 26 28
    SEMICOLON <op> (262) 7 19 20 21 23 24 25
    ADD <op> (263) 34
    SUB <op> (264) 35
    MULT <op> (265) 37
    DIV <op> (266) 38
    CHAR <op> (267) 32
    COMMA <op> (268) 8 11
    ASSIGN <op> (269) 23
    READ <str_value> (270) 19
    WRITE <str_value> (271) 20
    WRITELN <str_value> (272) 21
    TYPE <str_value> (273) 6 7 8 9
    ID <str_value> (274) 6 7 8 9 11 12 19 23 27 28 42
    EMPTY <str_value> (275) 30
    STRING <str_value> (276) 31
    RETURN <str_value> (277) 25
    FORALL <str_value> (278) 26
    IN <str_value> (279) 27
    INTEGER <int_value> (280) 40
    FLOAT <float_value> (281) 41


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    program (28)
        on left: 1
        on right: 0
    stmts (29)
        on left: 2 3
        on right: 1 2
    stmt (30)
        on left: 4 5
        on right: 2 3
    func_stmt (31)
        on left: 6
        on right: 4
    var_decl_stmt (32)
        on left: 7
        on right: 5 22
    param_list (33)
        on left: 8 9 10
        on right: 6 8
    simple_param_list (34)
        on left: 11 12 13
        on right: 11 28
    flex_comp_block_stmt (35)
        on left: 14 15
        on right: 26
    comp_block_stmt (36)
        on left: 16
        on right: 6 14
    block_stmts (37)
        on left: 17 18
        on right: 16 17
    block_stmt (38)
        on left: 19 20 21 22 23 24 25 26
        on right: 15 17
    set_expr (39)
        on left: 27
        on right: 26
    func_call (40)
        on left: 28
        on right: 24 33
    simple_expr (41)
        on left: 29 30 31 32 33
        on right: 20 21 23 25
    arith_expr (42)
        on left: 34 35 36
        on right: 29 34 35
    term (43)
        on left: 37 38 39
        on right: 34 35 36 37 38
    factor (44)
        on left: 40 41 42
        on right: 37 38 39


State 0

    0 $accept: . program $end

    TYPE  shift, and go to state 1

    program        go to state 2
    stmts          go to state 3
    stmt           go to state 4
    func_stmt      go to state 5
    var_decl_stmt  go to state 6


State 1

    6 func_stmt: TYPE . ID PARENT_LEFT param_list PARENT_RIGHT comp_block_stmt
    7 var_decl_stmt: TYPE . ID SEMICOLON

    ID  shift, and go to state 7


State 2

    0 $accept: program . $end

    $end  shift, and go to state 8


State 3

    1 program: stmts .
    2 stmts: stmts . stmt

    TYPE  shift, and go to state 1

    $end  reduce using rule 1 (program)

    stmt           go to state 9
    func_stmt      go to state 5
    var_decl_stmt  go to state 6


State 4

    3 stmts: stmt .

    $end  reduce using rule 3 (stmts)
    TYPE  reduce using rule 3 (stmts)


State 5

    4 stmt: func_stmt .

    $end  reduce using rule 4 (stmt)
    TYPE  reduce using rule 4 (stmt)


State 6

    5 stmt: var_decl_stmt .

    $end  reduce using rule 5 (stmt)
    TYPE  reduce using rule 5 (stmt)


State 7

    6 func_stmt: TYPE ID . PARENT_LEFT param_list PARENT_RIGHT comp_block_stmt
    7 var_decl_stmt: TYPE ID . SEMICOLON

    PARENT_LEFT  shift, and go to state 10
    SEMICOLON    shift, and go to state 11


State 8

    0 $accept: program $end .

    $default  accept


State 9

    2 stmts: stmts stmt .

    $end  reduce using rule 2 (stmts)
    TYPE  reduce using rule 2 (stmts)


State 10

    6 func_stmt: TYPE ID PARENT_LEFT . param_list PARENT_RIGHT comp_block_stmt

    TYPE  shift, and go to state 12

    PARENT_RIGHT  reduce using rule 10 (param_list)
    COMMA         reduce using rule 10 (param_list)

    param_list  go to state 13


State 11

    7 var_decl_stmt: TYPE ID SEMICOLON .

    $end  reduce using rule 7 (var_decl_stmt)
    TYPE  reduce using rule 7 (var_decl_stmt)


State 12

    9 param_list: TYPE . ID

    ID  shift, and go to state 14


State 13

    6 func_stmt: TYPE ID PARENT_LEFT param_list . PARENT_RIGHT comp_block_stmt
    8 param_list: param_list . COMMA TYPE ID

    PARENT_RIGHT  shift, and go to state 15
    COMMA         shift, and go to state 16


State 14

    9 param_list: TYPE ID .

    PARENT_RIGHT  reduce using rule 9 (param_list)
    COMMA         reduce using rule 9 (param_list)


State 15

    6 func_stmt: TYPE ID PARENT_LEFT param_list PARENT_RIGHT . comp_block_stmt

    BRACK_LEFT  shift, and go to state 17

    comp_block_stmt  go to state 18


State 16

    8 param_list: param_list COMMA . TYPE ID

    TYPE  shift, and go to state 19


State 17

   16 comp_block_stmt: BRACK_LEFT . block_stmts BRACK_RIGHT

    BRACK_RIGHT  reduce using rule 18 (block_stmts)
    READ         reduce using rule 18 (block_stmts)
    WRITE        reduce using rule 18 (block_stmts)
    WRITELN      reduce using rule 18 (block_stmts)
    TYPE         reduce using rule 18 (block_stmts)
    ID           reduce using rule 18 (block_stmts)
    RETURN       reduce using rule 18 (block_stmts)
    FORALL       reduce using rule 18 (block_stmts)

    block_stmts  go to state 20


State 18

    6 func_stmt: TYPE ID PARENT_LEFT param_list PARENT_RIGHT comp_block_stmt .

    $end  reduce using rule 6 (func_stmt)
    TYPE  reduce using rule 6 (func_stmt)


State 19

    8 param_list: param_list COMMA TYPE . ID

    ID  shift, and go to state 21


State 20

   16 comp_block_stmt: BRACK_LEFT block_stmts . BRACK_RIGHT
   17 block_stmts: block_stmts . block_stmt

    BRACK_RIGHT  shift, and go to state 22
    READ         shift, and go to state 23
    WRITE        shift, and go to state 24
    WRITELN      shift, and go to state 25
    TYPE         shift, and go to state 26
    ID           shift, and go to state 27
    RETURN       shift, and go to state 28
    FORALL       shift, and go to state 29

    var_decl_stmt  go to state 30
    block_stmt     go to state 31
    func_call      go to state 32


State 21

    8 param_list: param_list COMMA TYPE ID .

    PARENT_RIGHT  reduce using rule 8 (param_list)
    COMMA         reduce using rule 8 (param_list)


State 22

   16 comp_block_stmt: BRACK_LEFT block_stmts BRACK_RIGHT .

    $end  reduce using rule 16 (comp_block_stmt)
    TYPE  reduce using rule 16 (comp_block_stmt)


State 23

   19 block_stmt: READ . PARENT_LEFT ID PARENT_RIGHT SEMICOLON

    PARENT_LEFT  shift, and go to state 33


State 24

   20 block_stmt: WRITE . PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON

    PARENT_LEFT  shift, and go to state 34


State 25

   21 block_stmt: WRITELN . PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON

    PARENT_LEFT  shift, and go to state 35


State 26

    7 var_decl_stmt: TYPE . ID SEMICOLON

    ID  shift, and go to state 36


State 27

   23 block_stmt: ID . ASSIGN simple_expr SEMICOLON
   28 func_call: ID . PARENT_LEFT simple_param_list PARENT_RIGHT

    PARENT_LEFT  shift, and go to state 37
    ASSIGN       shift, and go to state 38


State 28

   25 block_stmt: RETURN . simple_expr SEMICOLON

    CHAR     shift, and go to state 39
    ID       shift, and go to state 40
    EMPTY    shift, and go to state 41
    STRING   shift, and go to state 42
    INTEGER  shift, and go to state 43
    FLOAT    shift, and go to state 44

    func_call    go to state 45
    simple_expr  go to state 46
    arith_expr   go to state 47
    term         go to state 48
    factor       go to state 49


State 29

   26 block_stmt: FORALL . PARENT_LEFT set_expr PARENT_RIGHT flex_comp_block_stmt

    PARENT_LEFT  shift, and go to state 50


State 30

   22 block_stmt: var_decl_stmt .

    BRACK_RIGHT  reduce using rule 22 (block_stmt)
    READ         reduce using rule 22 (block_stmt)
    WRITE        reduce using rule 22 (block_stmt)
    WRITELN      reduce using rule 22 (block_stmt)
    TYPE         reduce using rule 22 (block_stmt)
    ID           reduce using rule 22 (block_stmt)
    RETURN       reduce using rule 22 (block_stmt)
    FORALL       reduce using rule 22 (block_stmt)


State 31

   17 block_stmts: block_stmts block_stmt .

    BRACK_RIGHT  reduce using rule 17 (block_stmts)
    READ         reduce using rule 17 (block_stmts)
    WRITE        reduce using rule 17 (block_stmts)
    WRITELN      reduce using rule 17 (block_stmts)
    TYPE         reduce using rule 17 (block_stmts)
    ID           reduce using rule 17 (block_stmts)
    RETURN       reduce using rule 17 (block_stmts)
    FORALL       reduce using rule 17 (block_stmts)


State 32

   24 block_stmt: func_call . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 33

   19 block_stmt: READ PARENT_LEFT . ID PARENT_RIGHT SEMICOLON

    ID  shift, and go to state 52


State 34

   20 block_stmt: WRITE PARENT_LEFT . simple_expr PARENT_RIGHT SEMICOLON

    CHAR     shift, and go to state 86
    ID       shift, and go to state 87
    EMPTY    shift, and go to state 88
    STRING   shift, and go to state 89
    INTEGER  shift, and go to state 90
    FLOAT    shift, and go to state 91

    func_call    go to state 92
    simple_expr  go to state 53
    arith_expr   go to state 93
    term         go to state 94
    factor       go to state 95


State 35

   21 block_stmt: WRITELN PARENT_LEFT . simple_expr PARENT_RIGHT SEMICOLON

    CHAR     shift, and go to state 86
    ID       shift, and go to state 87
    EMPTY    shift, and go to state 88
    STRING   shift, and go to state 89
    INTEGER  shift, and go to state 90
    FLOAT    shift, and go to state 91

    func_call    go to state 92
    simple_expr  go to state 54
    arith_expr   go to state 93
    term         go to state 94
    factor       go to state 95


State 36

    7 var_decl_stmt: TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 96


State 37

   28 func_call: ID PARENT_LEFT . simple_param_list PARENT_RIGHT

    ID  shift, and go to state 55

    PARENT_RIGHT  reduce using rule 13 (simple_param_list)
    COMMA         reduce using rule 13 (simple_param_list)

    simple_param_list  go to state 56


State 38

   23 block_stmt: ID ASSIGN . simple_expr SEMICOLON

    CHAR     shift, and go to state 39
    ID       shift, and go to state 40
    EMPTY    shift, and go to state 41
    STRING   shift, and go to state 42
    INTEGER  shift, and go to state 43
    FLOAT    shift, and go to state 44

    func_call    go to state 45
    simple_expr  go to state 57
    arith_expr   go to state 47
    term         go to state 48
    factor       go to state 49


State 39

   32 simple_expr: CHAR .

    SEMICOLON  reduce using rule 32 (simple_expr)


State 40

   28 func_call: ID . PARENT_LEFT simple_param_list PARENT_RIGHT
   42 factor: ID .

    PARENT_LEFT  shift, and go to state 37

    SEMICOLON  reduce using rule 42 (factor)
    ADD        reduce using rule 42 (factor)
    SUB        reduce using rule 42 (factor)
    MULT       reduce using rule 42 (factor)
    DIV        reduce using rule 42 (factor)


State 41

   30 simple_expr: EMPTY .

    SEMICOLON  reduce using rule 30 (simple_expr)


State 42

   31 simple_expr: STRING .

    SEMICOLON  reduce using rule 31 (simple_expr)


State 43

   40 factor: INTEGER .

    SEMICOLON  reduce using rule 40 (factor)
    ADD        reduce using rule 40 (factor)
    SUB        reduce using rule 40 (factor)
    MULT       reduce using rule 40 (factor)
    DIV        reduce using rule 40 (factor)


State 44

   41 factor: FLOAT .

    SEMICOLON  reduce using rule 41 (factor)
    ADD        reduce using rule 41 (factor)
    SUB        reduce using rule 41 (factor)
    MULT       reduce using rule 41 (factor)
    DIV        reduce using rule 41 (factor)


State 45

   33 simple_expr: func_call .

    SEMICOLON  reduce using rule 33 (simple_expr)


State 46

   25 block_stmt: RETURN simple_expr . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 47

   29 simple_expr: arith_expr .
   34 arith_expr: arith_expr . ADD term
   35           | arith_expr . SUB term

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60

    SEMICOLON  reduce using rule 29 (simple_expr)


State 48

   36 arith_expr: term .
   37 term: term . MULT factor
   38     | term . DIV factor

    MULT  shift, and go to state 61
    DIV   shift, and go to state 62

    SEMICOLON  reduce using rule 36 (arith_expr)
    ADD        reduce using rule 36 (arith_expr)
    SUB        reduce using rule 36 (arith_expr)


State 49

   39 term: factor .

    SEMICOLON  reduce using rule 39 (term)
    ADD        reduce using rule 39 (term)
    SUB        reduce using rule 39 (term)
    MULT       reduce using rule 39 (term)
    DIV        reduce using rule 39 (term)


State 50

   26 block_stmt: FORALL PARENT_LEFT . set_expr PARENT_RIGHT flex_comp_block_stmt

    ID  shift, and go to state 63

    set_expr  go to state 64


State 51

   24 block_stmt: func_call SEMICOLON .

    BRACK_RIGHT  reduce using rule 24 (block_stmt)
    READ         reduce using rule 24 (block_stmt)
    WRITE        reduce using rule 24 (block_stmt)
    WRITELN      reduce using rule 24 (block_stmt)
    TYPE         reduce using rule 24 (block_stmt)
    ID           reduce using rule 24 (block_stmt)
    RETURN       reduce using rule 24 (block_stmt)
    FORALL       reduce using rule 24 (block_stmt)


State 52

   19 block_stmt: READ PARENT_LEFT ID . PARENT_RIGHT SEMICOLON

    PARENT_RIGHT  shift, and go to state 65


State 53

   20 block_stmt: WRITE PARENT_LEFT simple_expr . PARENT_RIGHT SEMICOLON

    PARENT_RIGHT  shift, and go to state 66


State 54

   21 block_stmt: WRITELN PARENT_LEFT simple_expr . PARENT_RIGHT SEMICOLON

    PARENT_RIGHT  shift, and go to state 67


State 55

   12 simple_param_list: ID .

    PARENT_RIGHT  reduce using rule 12 (simple_param_list)
    COMMA         reduce using rule 12 (simple_param_list)


State 56

   11 simple_param_list: simple_param_list . COMMA ID
   28 func_call: ID PARENT_LEFT simple_param_list . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 68
    COMMA         shift, and go to state 69


State 57

   23 block_stmt: ID ASSIGN simple_expr . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 58

   25 block_stmt: RETURN simple_expr SEMICOLON .

    BRACK_RIGHT  reduce using rule 25 (block_stmt)
    READ         reduce using rule 25 (block_stmt)
    WRITE        reduce using rule 25 (block_stmt)
    WRITELN      reduce using rule 25 (block_stmt)
    TYPE         reduce using rule 25 (block_stmt)
    ID           reduce using rule 25 (block_stmt)
    RETURN       reduce using rule 25 (block_stmt)
    FORALL       reduce using rule 25 (block_stmt)


State 59

   34 arith_expr: arith_expr ADD . term

    ID       shift, and go to state 71
    INTEGER  shift, and go to state 43
    FLOAT    shift, and go to state 44

    term    go to state 72
    factor  go to state 49


State 60

   35 arith_expr: arith_expr SUB . term

    ID       shift, and go to state 71
    INTEGER  shift, and go to state 43
    FLOAT    shift, and go to state 44

    term    go to state 73
    factor  go to state 49


State 61

   37 term: term MULT . factor

    ID       shift, and go to state 71
    INTEGER  shift, and go to state 43
    FLOAT    shift, and go to state 44

    factor  go to state 74


State 62

   38 term: term DIV . factor

    ID       shift, and go to state 71
    INTEGER  shift, and go to state 43
    FLOAT    shift, and go to state 44

    factor  go to state 75


State 63

   27 set_expr: ID . IN ID

    IN  shift, and go to state 76


State 64

   26 block_stmt: FORALL PARENT_LEFT set_expr . PARENT_RIGHT flex_comp_block_stmt

    PARENT_RIGHT  shift, and go to state 77


State 65

   19 block_stmt: READ PARENT_LEFT ID PARENT_RIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 78


State 66

   20 block_stmt: WRITE PARENT_LEFT simple_expr PARENT_RIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 67

   21 block_stmt: WRITELN PARENT_LEFT simple_expr PARENT_RIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 68

   28 func_call: ID PARENT_LEFT simple_param_list PARENT_RIGHT .

    SEMICOLON  reduce using rule 28 (func_call)


State 69

   11 simple_param_list: simple_param_list COMMA . ID

    ID  shift, and go to state 81


State 70

   23 block_stmt: ID ASSIGN simple_expr SEMICOLON .

    BRACK_RIGHT  reduce using rule 23 (block_stmt)
    READ         reduce using rule 23 (block_stmt)
    WRITE        reduce using rule 23 (block_stmt)
    WRITELN      reduce using rule 23 (block_stmt)
    TYPE         reduce using rule 23 (block_stmt)
    ID           reduce using rule 23 (block_stmt)
    RETURN       reduce using rule 23 (block_stmt)
    FORALL       reduce using rule 23 (block_stmt)


State 71

   42 factor: ID .

    SEMICOLON  reduce using rule 42 (factor)
    ADD        reduce using rule 42 (factor)
    SUB        reduce using rule 42 (factor)
    MULT       reduce using rule 42 (factor)
    DIV        reduce using rule 42 (factor)


State 72

   34 arith_expr: arith_expr ADD term .
   37 term: term . MULT factor
   38     | term . DIV factor

    MULT  shift, and go to state 61
    DIV   shift, and go to state 62

    SEMICOLON  reduce using rule 34 (arith_expr)
    ADD        reduce using rule 34 (arith_expr)
    SUB        reduce using rule 34 (arith_expr)


State 73

   35 arith_expr: arith_expr SUB term .
   37 term: term . MULT factor
   38     | term . DIV factor

    MULT  shift, and go to state 61
    DIV   shift, and go to state 62

    SEMICOLON  reduce using rule 35 (arith_expr)
    ADD        reduce using rule 35 (arith_expr)
    SUB        reduce using rule 35 (arith_expr)


State 74

   37 term: term MULT factor .

    SEMICOLON  reduce using rule 37 (term)
    ADD        reduce using rule 37 (term)
    SUB        reduce using rule 37 (term)
    MULT       reduce using rule 37 (term)
    DIV        reduce using rule 37 (term)


State 75

   38 term: term DIV factor .

    SEMICOLON  reduce using rule 38 (term)
    ADD        reduce using rule 38 (term)
    SUB        reduce using rule 38 (term)
    MULT       reduce using rule 38 (term)
    DIV        reduce using rule 38 (term)


State 76

   27 set_expr: ID IN . ID

    ID  shift, and go to state 82


State 77

   26 block_stmt: FORALL PARENT_LEFT set_expr PARENT_RIGHT . flex_comp_block_stmt

    BRACK_LEFT  shift, and go to state 97
    READ        shift, and go to state 23
    WRITE       shift, and go to state 24
    WRITELN     shift, and go to state 25
    TYPE        shift, and go to state 26
    ID          shift, and go to state 27
    RETURN      shift, and go to state 28
    FORALL      shift, and go to state 29

    var_decl_stmt         go to state 30
    flex_comp_block_stmt  go to state 83
    comp_block_stmt       go to state 84
    block_stmt            go to state 85
    func_call             go to state 32


State 78

   19 block_stmt: READ PARENT_LEFT ID PARENT_RIGHT SEMICOLON .

    BRACK_RIGHT  reduce using rule 19 (block_stmt)
    READ         reduce using rule 19 (block_stmt)
    WRITE        reduce using rule 19 (block_stmt)
    WRITELN      reduce using rule 19 (block_stmt)
    TYPE         reduce using rule 19 (block_stmt)
    ID           reduce using rule 19 (block_stmt)
    RETURN       reduce using rule 19 (block_stmt)
    FORALL       reduce using rule 19 (block_stmt)


State 79

   20 block_stmt: WRITE PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON .

    BRACK_RIGHT  reduce using rule 20 (block_stmt)
    READ         reduce using rule 20 (block_stmt)
    WRITE        reduce using rule 20 (block_stmt)
    WRITELN      reduce using rule 20 (block_stmt)
    TYPE         reduce using rule 20 (block_stmt)
    ID           reduce using rule 20 (block_stmt)
    RETURN       reduce using rule 20 (block_stmt)
    FORALL       reduce using rule 20 (block_stmt)


State 80

   21 block_stmt: WRITELN PARENT_LEFT simple_expr PARENT_RIGHT SEMICOLON .

    BRACK_RIGHT  reduce using rule 21 (block_stmt)
    READ         reduce using rule 21 (block_stmt)
    WRITE        reduce using rule 21 (block_stmt)
    WRITELN      reduce using rule 21 (block_stmt)
    TYPE         reduce using rule 21 (block_stmt)
    ID           reduce using rule 21 (block_stmt)
    RETURN       reduce using rule 21 (block_stmt)
    FORALL       reduce using rule 21 (block_stmt)


State 81

   11 simple_param_list: simple_param_list COMMA ID .

    PARENT_RIGHT  reduce using rule 11 (simple_param_list)
    COMMA         reduce using rule 11 (simple_param_list)


State 82

   27 set_expr: ID IN ID .

    PARENT_RIGHT  reduce using rule 27 (set_expr)


State 83

   26 block_stmt: FORALL PARENT_LEFT set_expr PARENT_RIGHT flex_comp_block_stmt .

    BRACK_RIGHT  reduce using rule 26 (block_stmt)
    READ         reduce using rule 26 (block_stmt)
    WRITE        reduce using rule 26 (block_stmt)
    WRITELN      reduce using rule 26 (block_stmt)
    TYPE         reduce using rule 26 (block_stmt)
    ID           reduce using rule 26 (block_stmt)
    RETURN       reduce using rule 26 (block_stmt)
    FORALL       reduce using rule 26 (block_stmt)


State 84

   14 flex_comp_block_stmt: comp_block_stmt .

    BRACK_RIGHT  reduce using rule 14 (flex_comp_block_stmt)
    READ         reduce using rule 14 (flex_comp_block_stmt)
    WRITE        reduce using rule 14 (flex_comp_block_stmt)
    WRITELN      reduce using rule 14 (flex_comp_block_stmt)
    TYPE         reduce using rule 14 (flex_comp_block_stmt)
    ID           reduce using rule 14 (flex_comp_block_stmt)
    RETURN       reduce using rule 14 (flex_comp_block_stmt)
    FORALL       reduce using rule 14 (flex_comp_block_stmt)


State 85

   15 flex_comp_block_stmt: block_stmt .

    BRACK_RIGHT  reduce using rule 15 (flex_comp_block_stmt)
    READ         reduce using rule 15 (flex_comp_block_stmt)
    WRITE        reduce using rule 15 (flex_comp_block_stmt)
    WRITELN      reduce using rule 15 (flex_comp_block_stmt)
    TYPE         reduce using rule 15 (flex_comp_block_stmt)
    ID           reduce using rule 15 (flex_comp_block_stmt)
    RETURN       reduce using rule 15 (flex_comp_block_stmt)
    FORALL       reduce using rule 15 (flex_comp_block_stmt)


State 86

   32 simple_expr: CHAR .

    PARENT_RIGHT  reduce using rule 32 (simple_expr)


State 87

   28 func_call: ID . PARENT_LEFT simple_param_list PARENT_RIGHT
   42 factor: ID .

    PARENT_LEFT  shift, and go to state 98

    PARENT_RIGHT  reduce using rule 42 (factor)
    ADD           reduce using rule 42 (factor)
    SUB           reduce using rule 42 (factor)
    MULT          reduce using rule 42 (factor)
    DIV           reduce using rule 42 (factor)


State 88

   30 simple_expr: EMPTY .

    PARENT_RIGHT  reduce using rule 30 (simple_expr)


State 89

   31 simple_expr: STRING .

    PARENT_RIGHT  reduce using rule 31 (simple_expr)


State 90

   40 factor: INTEGER .

    PARENT_RIGHT  reduce using rule 40 (factor)
    ADD           reduce using rule 40 (factor)
    SUB           reduce using rule 40 (factor)
    MULT          reduce using rule 40 (factor)
    DIV           reduce using rule 40 (factor)


State 91

   41 factor: FLOAT .

    PARENT_RIGHT  reduce using rule 41 (factor)
    ADD           reduce using rule 41 (factor)
    SUB           reduce using rule 41 (factor)
    MULT          reduce using rule 41 (factor)
    DIV           reduce using rule 41 (factor)


State 92

   33 simple_expr: func_call .

    PARENT_RIGHT  reduce using rule 33 (simple_expr)


State 93

   29 simple_expr: arith_expr .
   34 arith_expr: arith_expr . ADD term
   35           | arith_expr . SUB term

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100

    PARENT_RIGHT  reduce using rule 29 (simple_expr)


State 94

   36 arith_expr: term .
   37 term: term . MULT factor
   38     | term . DIV factor

    MULT  shift, and go to state 101
    DIV   shift, and go to state 102

    PARENT_RIGHT  reduce using rule 36 (arith_expr)
    ADD           reduce using rule 36 (arith_expr)
    SUB           reduce using rule 36 (arith_expr)


State 95

   39 term: factor .

    PARENT_RIGHT  reduce using rule 39 (term)
    ADD           reduce using rule 39 (term)
    SUB           reduce using rule 39 (term)
    MULT          reduce using rule 39 (term)
    DIV           reduce using rule 39 (term)


State 96

    7 var_decl_stmt: TYPE ID SEMICOLON .

    BRACK_RIGHT  reduce using rule 7 (var_decl_stmt)
    READ         reduce using rule 7 (var_decl_stmt)
    WRITE        reduce using rule 7 (var_decl_stmt)
    WRITELN      reduce using rule 7 (var_decl_stmt)
    TYPE         reduce using rule 7 (var_decl_stmt)
    ID           reduce using rule 7 (var_decl_stmt)
    RETURN       reduce using rule 7 (var_decl_stmt)
    FORALL       reduce using rule 7 (var_decl_stmt)


State 97

   16 comp_block_stmt: BRACK_LEFT . block_stmts BRACK_RIGHT

    BRACK_RIGHT  reduce using rule 18 (block_stmts)
    READ         reduce using rule 18 (block_stmts)
    WRITE        reduce using rule 18 (block_stmts)
    WRITELN      reduce using rule 18 (block_stmts)
    TYPE         reduce using rule 18 (block_stmts)
    ID           reduce using rule 18 (block_stmts)
    RETURN       reduce using rule 18 (block_stmts)
    FORALL       reduce using rule 18 (block_stmts)

    block_stmts  go to state 103


State 98

   28 func_call: ID PARENT_LEFT . simple_param_list PARENT_RIGHT

    ID  shift, and go to state 55

    PARENT_RIGHT  reduce using rule 13 (simple_param_list)
    COMMA         reduce using rule 13 (simple_param_list)

    simple_param_list  go to state 104


State 99

   34 arith_expr: arith_expr ADD . term

    ID       shift, and go to state 105
    INTEGER  shift, and go to state 90
    FLOAT    shift, and go to state 91

    term    go to state 106
    factor  go to state 95


State 100

   35 arith_expr: arith_expr SUB . term

    ID       shift, and go to state 105
    INTEGER  shift, and go to state 90
    FLOAT    shift, and go to state 91

    term    go to state 107
    factor  go to state 95


State 101

   37 term: term MULT . factor

    ID       shift, and go to state 105
    INTEGER  shift, and go to state 90
    FLOAT    shift, and go to state 91

    factor  go to state 108


State 102

   38 term: term DIV . factor

    ID       shift, and go to state 105
    INTEGER  shift, and go to state 90
    FLOAT    shift, and go to state 91

    factor  go to state 109


State 103

   16 comp_block_stmt: BRACK_LEFT block_stmts . BRACK_RIGHT
   17 block_stmts: block_stmts . block_stmt

    BRACK_RIGHT  shift, and go to state 110
    READ         shift, and go to state 23
    WRITE        shift, and go to state 24
    WRITELN      shift, and go to state 25
    TYPE         shift, and go to state 26
    ID           shift, and go to state 27
    RETURN       shift, and go to state 28
    FORALL       shift, and go to state 29

    var_decl_stmt  go to state 30
    block_stmt     go to state 31
    func_call      go to state 32


State 104

   11 simple_param_list: simple_param_list . COMMA ID
   28 func_call: ID PARENT_LEFT simple_param_list . PARENT_RIGHT

    PARENT_RIGHT  shift, and go to state 111
    COMMA         shift, and go to state 69


State 105

   42 factor: ID .

    PARENT_RIGHT  reduce using rule 42 (factor)
    ADD           reduce using rule 42 (factor)
    SUB           reduce using rule 42 (factor)
    MULT          reduce using rule 42 (factor)
    DIV           reduce using rule 42 (factor)


State 106

   34 arith_expr: arith_expr ADD term .
   37 term: term . MULT factor
   38     | term . DIV factor

    MULT  shift, and go to state 101
    DIV   shift, and go to state 102

    PARENT_RIGHT  reduce using rule 34 (arith_expr)
    ADD           reduce using rule 34 (arith_expr)
    SUB           reduce using rule 34 (arith_expr)


State 107

   35 arith_expr: arith_expr SUB term .
   37 term: term . MULT factor
   38     | term . DIV factor

    MULT  shift, and go to state 101
    DIV   shift, and go to state 102

    PARENT_RIGHT  reduce using rule 35 (arith_expr)
    ADD           reduce using rule 35 (arith_expr)
    SUB           reduce using rule 35 (arith_expr)


State 108

   37 term: term MULT factor .

    PARENT_RIGHT  reduce using rule 37 (term)
    ADD           reduce using rule 37 (term)
    SUB           reduce using rule 37 (term)
    MULT          reduce using rule 37 (term)
    DIV           reduce using rule 37 (term)


State 109

   38 term: term DIV factor .

    PARENT_RIGHT  reduce using rule 38 (term)
    ADD           reduce using rule 38 (term)
    SUB           reduce using rule 38 (term)
    MULT          reduce using rule 38 (term)
    DIV           reduce using rule 38 (term)


State 110

   16 comp_block_stmt: BRACK_LEFT block_stmts BRACK_RIGHT .

    BRACK_RIGHT  reduce using rule 16 (comp_block_stmt)
    READ         reduce using rule 16 (comp_block_stmt)
    WRITE        reduce using rule 16 (comp_block_stmt)
    WRITELN      reduce using rule 16 (comp_block_stmt)
    TYPE         reduce using rule 16 (comp_block_stmt)
    ID           reduce using rule 16 (comp_block_stmt)
    RETURN       reduce using rule 16 (comp_block_stmt)
    FORALL       reduce using rule 16 (comp_block_stmt)


State 111

   28 func_call: ID PARENT_LEFT simple_param_list PARENT_RIGHT .

    PARENT_RIGHT  reduce using rule 28 (func_call)
