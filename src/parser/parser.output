Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input line

    3 line: NEWLINE
    4     | stmt NEWLINE
    5     | error NEWLINE

    6 stmt: simple_stmt

    7 simple_stmt: var ASSIGN expr

    8 var: ID

    9 expr: arith_expr
   10     | BOOLEAN

   11 arith_expr: arith_expr ADD term
   12           | arith_expr SUB term
   13           | term

   14 term: term MULT factor
   15     | term DIV factor
   16     | factor

   17 factor: INTEGER
   18       | FLOAT


Terminals, with rules where they appear

    $end (0) 0
    error (256) 5
    ADD <op> (258) 11
    SUB <op> (259) 12
    MULT <op> (260) 14
    DIV <op> (261) 15
    ASSIGN <op> (262) 7
    INTEGER <int_value> (263) 17
    BOOLEAN <int_value> (264) 10
    FLOAT <float_value> (265) 18
    ID <st_ref> (266) 8
    NEWLINE (267) 3 4 5


Nonterminals, with rules where they appear

    $accept (13)
        on left: 0
    input (14)
        on left: 1 2
        on right: 0 2
    line (15)
        on left: 3 4 5
        on right: 2
    stmt <expression> (16)
        on left: 6
        on right: 4
    simple_stmt <expression> (17)
        on left: 7
        on right: 6
    var <expression> (18)
        on left: 8
        on right: 7
    expr <expression> (19)
        on left: 9 10
        on right: 7
    arith_expr <expression> (20)
        on left: 11 12 13
        on right: 9 11 12
    term <expression> (21)
        on left: 14 15 16
        on right: 11 12 13 14 15
    factor <expression> (22)
        on left: 17 18
        on right: 14 15 16


State 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . line

    $end     shift, and go to state 2
    error    shift, and go to state 3
    ID       shift, and go to state 4
    NEWLINE  shift, and go to state 5

    line         go to state 6
    stmt         go to state 7
    simple_stmt  go to state 8
    var          go to state 9


State 2

    0 $accept: input $end .

    $default  accept


State 3

    5 line: error . NEWLINE

    NEWLINE  shift, and go to state 10


State 4

    8 var: ID .

    $default  reduce using rule 8 (var)


State 5

    3 line: NEWLINE .

    $default  reduce using rule 3 (line)


State 6

    2 input: input line .

    $default  reduce using rule 2 (input)


State 7

    4 line: stmt . NEWLINE

    NEWLINE  shift, and go to state 11


State 8

    6 stmt: simple_stmt .

    $default  reduce using rule 6 (stmt)


State 9

    7 simple_stmt: var . ASSIGN expr

    ASSIGN  shift, and go to state 12


State 10

    5 line: error NEWLINE .

    $default  reduce using rule 5 (line)


State 11

    4 line: stmt NEWLINE .

    $default  reduce using rule 4 (line)


State 12

    7 simple_stmt: var ASSIGN . expr

    INTEGER  shift, and go to state 13
    BOOLEAN  shift, and go to state 14
    FLOAT    shift, and go to state 15

    expr        go to state 16
    arith_expr  go to state 17
    term        go to state 18
    factor      go to state 19


State 13

   17 factor: INTEGER .

    $default  reduce using rule 17 (factor)


State 14

   10 expr: BOOLEAN .

    $default  reduce using rule 10 (expr)


State 15

   18 factor: FLOAT .

    $default  reduce using rule 18 (factor)


State 16

    7 simple_stmt: var ASSIGN expr .

    $default  reduce using rule 7 (simple_stmt)


State 17

    9 expr: arith_expr .
   11 arith_expr: arith_expr . ADD term
   12           | arith_expr . SUB term

    ADD  shift, and go to state 20
    SUB  shift, and go to state 21

    $default  reduce using rule 9 (expr)


State 18

   13 arith_expr: term .
   14 term: term . MULT factor
   15     | term . DIV factor

    MULT  shift, and go to state 22
    DIV   shift, and go to state 23

    $default  reduce using rule 13 (arith_expr)


State 19

   16 term: factor .

    $default  reduce using rule 16 (term)


State 20

   11 arith_expr: arith_expr ADD . term

    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 15

    term    go to state 24
    factor  go to state 19


State 21

   12 arith_expr: arith_expr SUB . term

    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 15

    term    go to state 25
    factor  go to state 19


State 22

   14 term: term MULT . factor

    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 15

    factor  go to state 26


State 23

   15 term: term DIV . factor

    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 15

    factor  go to state 27


State 24

   11 arith_expr: arith_expr ADD term .
   14 term: term . MULT factor
   15     | term . DIV factor

    MULT  shift, and go to state 22
    DIV   shift, and go to state 23

    $default  reduce using rule 11 (arith_expr)


State 25

   12 arith_expr: arith_expr SUB term .
   14 term: term . MULT factor
   15     | term . DIV factor

    MULT  shift, and go to state 22
    DIV   shift, and go to state 23

    $default  reduce using rule 12 (arith_expr)


State 26

   14 term: term MULT factor .

    $default  reduce using rule 14 (term)


State 27

   15 term: term DIV factor .

    $default  reduce using rule 15 (term)
